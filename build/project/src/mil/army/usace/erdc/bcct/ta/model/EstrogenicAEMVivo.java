package mil.army.usace.erdc.bcct.ta.model;

public class EstrogenicAEMVivo {
	  public boolean isSupervised() { return false; }
	  public int nfeatures() { return 10; }
	  public int nclasses() { return 10; }
	  // Thread-local storage for input neuron activation values.
	  final double[] NUMS = new double[10];
	  static class NORMMUL implements java.io.Serializable {
	    public static final double[] VALUES = new double[10];
	    static {
	      NORMMUL_0.fill(VALUES);
	    }
	    static final class NORMMUL_0 implements java.io.Serializable {
	      static final void fill(double[] sa) {
	        sa[0] = 0.5053269476548513;
	        sa[1] = 0.5124187678516595;
	        sa[2] = 0.5723485539403241;
	        sa[3] = 0.6964019608646784;
	        sa[4] = 0.571834473044996;
	        sa[5] = 0.5350079190362941;
	        sa[6] = 0.6425383714647647;
	        sa[7] = 0.5623134287575562;
	        sa[8] = 0.71115251025933;
	        sa[9] = 0.5187593372973975;
	      }
	    }
	}
	  static class NORMSUB implements java.io.Serializable {
	    public static final double[] VALUES = new double[10];
	    static {
	      NORMSUB_0.fill(VALUES);
	    }
	    static final class NORMSUB_0 implements java.io.Serializable {
	      static final void fill(double[] sa) {
	        sa[0] = -0.28562335608569406;
	        sa[1] = -0.2939867610092097;
	        sa[2] = 0.4490767337347606;
	        sa[3] = 0.6536400068844705;
	        sa[4] = 0.60082105717149;
	        sa[5] = 0.47381194689330103;
	        sa[6] = 0.6833170344952666;
	        sa[7] = 0.5113362486900767;
	        sa[8] = 0.6578133123705052;
	        sa[9] = -0.2775423805604444;
	      }
	    }
	}
	  // Workspace for categorical offsets.
	  public static final int[] CATOFFSETS = {0};
	  // Number of neurons for each layer.
	  public static final int[] NEURONS = {10,43,20,5,2,5,20,43,10};
	    public int getPredsSize() { return 10; }
	    public boolean isAutoEncoder() { return true; }
	    public String getHeader() { return "reconstr_ATG_CIS,reconstr_ATG_TRANS,reconstr_NVS_NR_hER,reconstr_OT_ER_ERaERa_0480,reconstr_OT_ER_ERaERa_1440,reconstr_OT_ER_ERaERb_0480,reconstr_OT_ER_ERaERb_1440,reconstr_OT_ER_ERbERb_0480,reconstr_OT_ER_ERbERb_1440,reconstr_TOX21_ERa_BLA_Agonist"; }
	    // Thread-local storage for neuron activation values.
	    public final double[][] ACTIVATION = new double[][] {
	      /* Input */ DeepLearning_model_R_1481832873762_1608_Activation_0.VALUES,
	      /* Tanh */ DeepLearning_model_R_1481832873762_1608_Activation_1.VALUES,
	      /* Tanh */ DeepLearning_model_R_1481832873762_1608_Activation_2.VALUES,
	      /* Tanh */ DeepLearning_model_R_1481832873762_1608_Activation_3.VALUES,
	      /* Tanh */ DeepLearning_model_R_1481832873762_1608_Activation_4.VALUES,
	      /* Tanh */ DeepLearning_model_R_1481832873762_1608_Activation_5.VALUES,
	      /* Tanh */ DeepLearning_model_R_1481832873762_1608_Activation_6.VALUES,
	      /* Tanh */ DeepLearning_model_R_1481832873762_1608_Activation_7.VALUES,
	      /* Tanh */ DeepLearning_model_R_1481832873762_1608_Activation_8.VALUES
	    };
	    // Neuron bias values.
	    public static final double[][] BIAS = new double[][] {
	      /* Input */ DeepLearning_model_R_1481832873762_1608_Bias_0.VALUES,
	      /* Tanh */ DeepLearning_model_R_1481832873762_1608_Bias_1.VALUES,
	      /* Tanh */ DeepLearning_model_R_1481832873762_1608_Bias_2.VALUES,
	      /* Tanh */ DeepLearning_model_R_1481832873762_1608_Bias_3.VALUES,
	      /* Tanh */ DeepLearning_model_R_1481832873762_1608_Bias_4.VALUES,
	      /* Tanh */ DeepLearning_model_R_1481832873762_1608_Bias_5.VALUES,
	      /* Tanh */ DeepLearning_model_R_1481832873762_1608_Bias_6.VALUES,
	      /* Tanh */ DeepLearning_model_R_1481832873762_1608_Bias_7.VALUES,
	      /* Tanh */ DeepLearning_model_R_1481832873762_1608_Bias_8.VALUES
	    };
	    // Connecting weights between neurons.
	    public static final float[][] WEIGHT = new float[][] {
	      /* Input */ DeepLearning_model_R_1481832873762_1608_Weight_0.VALUES,
	      /* Tanh */ DeepLearning_model_R_1481832873762_1608_Weight_1.VALUES,
	      /* Tanh */ DeepLearning_model_R_1481832873762_1608_Weight_2.VALUES,
	      /* Tanh */ DeepLearning_model_R_1481832873762_1608_Weight_3.VALUES,
	      /* Tanh */ DeepLearning_model_R_1481832873762_1608_Weight_4.VALUES,
	      /* Tanh */ DeepLearning_model_R_1481832873762_1608_Weight_5.VALUES,
	      /* Tanh */ DeepLearning_model_R_1481832873762_1608_Weight_6.VALUES,
	      /* Tanh */ DeepLearning_model_R_1481832873762_1608_Weight_7.VALUES,
	      /* Tanh */ DeepLearning_model_R_1481832873762_1608_Weight_8.VALUES
	    };

	  // Names of columns used by model.
	  public static final String[] NAMES = NamesHolder_DeepLearning_model_R_1481832873762_1608.VALUES;

	  // Column domains. The last array contains domain of response column.
	  public static final String[][] DOMAINS = new String[][] {
	    /* ATG_CIS */ null,
	    /* ATG_TRANS */ null,
	    /* NVS_NR_hER */ null,
	    /* OT_ER_ERaERa_0480 */ null,
	    /* OT_ER_ERaERa_1440 */ null,
	    /* OT_ER_ERaERb_0480 */ null,
	    /* OT_ER_ERaERb_1440 */ null,
	    /* OT_ER_ERbERb_0480 */ null,
	    /* OT_ER_ERbERb_1440 */ null,
	    /* TOX21_ERa_BLA_Agonist */ null
	  };

	  // Pass in data in a double[], pre-aligned to the Model's requirements.
	  // Jam predictions into the preds[] array; preds[0] is reserved for the
	  // main prediction (class for classifiers or value for regression),
	  // and remaining columns hold a probability distribution for classifiers.
	  public final double[] score0( double[] data, double[] preds ) {
	    java.util.Arrays.fill(preds,0);
	    java.util.Arrays.fill(NUMS,0);
	    int i = 0, ncats = 0;
	    final int n = data.length;
	    for(; i<n; ++i) {
	      NUMS[i] = Double.isNaN(data[i]) ? 0 : (data[i] - NORMSUB.VALUES[i])*NORMMUL.VALUES[i];
	    }
	    java.util.Arrays.fill(ACTIVATION[0],0);
	    for (i=0; i<NUMS.length; ++i) {
	      ACTIVATION[0][CATOFFSETS[CATOFFSETS.length-1] + i] = Double.isNaN(NUMS[i]) ? 0 : NUMS[i];
	    }
	    for (i=1; i<ACTIVATION.length; ++i) {
	      java.util.Arrays.fill(ACTIVATION[i],0);
	      int cols = ACTIVATION[i-1].length;
	      int rows = ACTIVATION[i].length;
	      int extra=cols-cols%8;
	      int multiple = (cols/8)*8-1;
	      int idx = 0;
	      float[] a = WEIGHT[i];
	      double[] x = ACTIVATION[i-1];
	      double[] y = BIAS[i];
	      double[] res = ACTIVATION[i];
	      for (int row=0; row<rows; ++row) {
	        double psum0 = 0, psum1 = 0, psum2 = 0, psum3 = 0, psum4 = 0, psum5 = 0, psum6 = 0, psum7 = 0;
	        for (int col = 0; col < multiple; col += 8) {
	          int off = idx + col;
	          psum0 += a[off    ] * x[col    ];
	          psum1 += a[off + 1] * x[col + 1];
	          psum2 += a[off + 2] * x[col + 2];
	          psum3 += a[off + 3] * x[col + 3];
	          psum4 += a[off + 4] * x[col + 4];
	          psum5 += a[off + 5] * x[col + 5];
	          psum6 += a[off + 6] * x[col + 6];
	          psum7 += a[off + 7] * x[col + 7];
	        }
	        res[row] += psum0 + psum1 + psum2 + psum3;
	        res[row] += psum4 + psum5 + psum6 + psum7;
	        for (int col = extra; col < cols; col++)
	          res[row] += a[idx + col] * x[col];
	        res[row] += y[row];
	        idx += cols;
	      }
	      if (i<=ACTIVATION.length-1) {
	        for (int r=0; r<ACTIVATION[i].length; ++r) {
	          ACTIVATION[i][r] = 1 - 2 / (1 + Math.exp(2*ACTIVATION[i][r]));
	        }
	      }
	      if (i == ACTIVATION.length-1) {
	        for (int r=0; r<ACTIVATION[i].length; r++) {
	          if (Double.isNaN(ACTIVATION[i][r]))
	            throw new RuntimeException("Numerical instability, reconstructed NaN.");
	          preds[r] = ACTIVATION[i][r];
	        }
	        for (int k=0; k<10; ++k) {
	          preds[k] = preds[k] / NORMMUL.VALUES[k-0] + NORMSUB.VALUES[k-0];
	        }
	      }
	    }
	    return preds;
	  }
	}
	// Neuron activation values for Input layer
	class DeepLearning_model_R_1481832873762_1608_Activation_0 implements java.io.Serializable {
	  public static final double[] VALUES = new double[10];
	  static {
	    DeepLearning_model_R_1481832873762_1608_Activation_0_0.fill(VALUES);
	  }
	  static final class DeepLearning_model_R_1481832873762_1608_Activation_0_0 implements java.io.Serializable {
	    static final void fill(double[] sa) {
	      sa[0] = 0.0;
	      sa[1] = 0.0;
	      sa[2] = 0.0;
	      sa[3] = 0.0;
	      sa[4] = 0.0;
	      sa[5] = 0.0;
	      sa[6] = 0.0;
	      sa[7] = 0.0;
	      sa[8] = 0.0;
	      sa[9] = 0.0;
	    }
	  }
	}
	// Neuron activation values for Tanh layer
	class DeepLearning_model_R_1481832873762_1608_Activation_1 implements java.io.Serializable {
	  public static final double[] VALUES = new double[43];
	  static {
	    DeepLearning_model_R_1481832873762_1608_Activation_1_0.fill(VALUES);
	  }
	  static final class DeepLearning_model_R_1481832873762_1608_Activation_1_0 implements java.io.Serializable {
	    static final void fill(double[] sa) {
	      sa[0] = 0.0;
	      sa[1] = 0.0;
	      sa[2] = 0.0;
	      sa[3] = 0.0;
	      sa[4] = 0.0;
	      sa[5] = 0.0;
	      sa[6] = 0.0;
	      sa[7] = 0.0;
	      sa[8] = 0.0;
	      sa[9] = 0.0;
	      sa[10] = 0.0;
	      sa[11] = 0.0;
	      sa[12] = 0.0;
	      sa[13] = 0.0;
	      sa[14] = 0.0;
	      sa[15] = 0.0;
	      sa[16] = 0.0;
	      sa[17] = 0.0;
	      sa[18] = 0.0;
	      sa[19] = 0.0;
	      sa[20] = 0.0;
	      sa[21] = 0.0;
	      sa[22] = 0.0;
	      sa[23] = 0.0;
	      sa[24] = 0.0;
	      sa[25] = 0.0;
	      sa[26] = 0.0;
	      sa[27] = 0.0;
	      sa[28] = 0.0;
	      sa[29] = 0.0;
	      sa[30] = 0.0;
	      sa[31] = 0.0;
	      sa[32] = 0.0;
	      sa[33] = 0.0;
	      sa[34] = 0.0;
	      sa[35] = 0.0;
	      sa[36] = 0.0;
	      sa[37] = 0.0;
	      sa[38] = 0.0;
	      sa[39] = 0.0;
	      sa[40] = 0.0;
	      sa[41] = 0.0;
	      sa[42] = 0.0;
	    }
	  }
	}
	// Neuron activation values for Tanh layer
	class DeepLearning_model_R_1481832873762_1608_Activation_2 implements java.io.Serializable {
	  public static final double[] VALUES = new double[20];
	  static {
	    DeepLearning_model_R_1481832873762_1608_Activation_2_0.fill(VALUES);
	  }
	  static final class DeepLearning_model_R_1481832873762_1608_Activation_2_0 implements java.io.Serializable {
	    static final void fill(double[] sa) {
	      sa[0] = 0.0;
	      sa[1] = 0.0;
	      sa[2] = 0.0;
	      sa[3] = 0.0;
	      sa[4] = 0.0;
	      sa[5] = 0.0;
	      sa[6] = 0.0;
	      sa[7] = 0.0;
	      sa[8] = 0.0;
	      sa[9] = 0.0;
	      sa[10] = 0.0;
	      sa[11] = 0.0;
	      sa[12] = 0.0;
	      sa[13] = 0.0;
	      sa[14] = 0.0;
	      sa[15] = 0.0;
	      sa[16] = 0.0;
	      sa[17] = 0.0;
	      sa[18] = 0.0;
	      sa[19] = 0.0;
	    }
	  }
	}
	// Neuron activation values for Tanh layer
	class DeepLearning_model_R_1481832873762_1608_Activation_3 implements java.io.Serializable {
	  public static final double[] VALUES = new double[5];
	  static {
	    DeepLearning_model_R_1481832873762_1608_Activation_3_0.fill(VALUES);
	  }
	  static final class DeepLearning_model_R_1481832873762_1608_Activation_3_0 implements java.io.Serializable {
	    static final void fill(double[] sa) {
	      sa[0] = 0.0;
	      sa[1] = 0.0;
	      sa[2] = 0.0;
	      sa[3] = 0.0;
	      sa[4] = 0.0;
	    }
	  }
	}
	// Neuron activation values for Tanh layer
	class DeepLearning_model_R_1481832873762_1608_Activation_4 implements java.io.Serializable {
	  public static final double[] VALUES = new double[2];
	  static {
	    DeepLearning_model_R_1481832873762_1608_Activation_4_0.fill(VALUES);
	  }
	  static final class DeepLearning_model_R_1481832873762_1608_Activation_4_0 implements java.io.Serializable {
	    static final void fill(double[] sa) {
	      sa[0] = 0.0;
	      sa[1] = 0.0;
	    }
	  }
	}
	// Neuron activation values for Tanh layer
	class DeepLearning_model_R_1481832873762_1608_Activation_5 implements java.io.Serializable {
	  public static final double[] VALUES = new double[5];
	  static {
	    DeepLearning_model_R_1481832873762_1608_Activation_5_0.fill(VALUES);
	  }
	  static final class DeepLearning_model_R_1481832873762_1608_Activation_5_0 implements java.io.Serializable {
	    static final void fill(double[] sa) {
	      sa[0] = 0.0;
	      sa[1] = 0.0;
	      sa[2] = 0.0;
	      sa[3] = 0.0;
	      sa[4] = 0.0;
	    }
	  }
	}
	// Neuron activation values for Tanh layer
	class DeepLearning_model_R_1481832873762_1608_Activation_6 implements java.io.Serializable {
	  public static final double[] VALUES = new double[20];
	  static {
	    DeepLearning_model_R_1481832873762_1608_Activation_6_0.fill(VALUES);
	  }
	  static final class DeepLearning_model_R_1481832873762_1608_Activation_6_0 implements java.io.Serializable {
	    static final void fill(double[] sa) {
	      sa[0] = 0.0;
	      sa[1] = 0.0;
	      sa[2] = 0.0;
	      sa[3] = 0.0;
	      sa[4] = 0.0;
	      sa[5] = 0.0;
	      sa[6] = 0.0;
	      sa[7] = 0.0;
	      sa[8] = 0.0;
	      sa[9] = 0.0;
	      sa[10] = 0.0;
	      sa[11] = 0.0;
	      sa[12] = 0.0;
	      sa[13] = 0.0;
	      sa[14] = 0.0;
	      sa[15] = 0.0;
	      sa[16] = 0.0;
	      sa[17] = 0.0;
	      sa[18] = 0.0;
	      sa[19] = 0.0;
	    }
	  }
	}
	// Neuron activation values for Tanh layer
	class DeepLearning_model_R_1481832873762_1608_Activation_7 implements java.io.Serializable {
	  public static final double[] VALUES = new double[43];
	  static {
	    DeepLearning_model_R_1481832873762_1608_Activation_7_0.fill(VALUES);
	  }
	  static final class DeepLearning_model_R_1481832873762_1608_Activation_7_0 implements java.io.Serializable {
	    static final void fill(double[] sa) {
	      sa[0] = 0.0;
	      sa[1] = 0.0;
	      sa[2] = 0.0;
	      sa[3] = 0.0;
	      sa[4] = 0.0;
	      sa[5] = 0.0;
	      sa[6] = 0.0;
	      sa[7] = 0.0;
	      sa[8] = 0.0;
	      sa[9] = 0.0;
	      sa[10] = 0.0;
	      sa[11] = 0.0;
	      sa[12] = 0.0;
	      sa[13] = 0.0;
	      sa[14] = 0.0;
	      sa[15] = 0.0;
	      sa[16] = 0.0;
	      sa[17] = 0.0;
	      sa[18] = 0.0;
	      sa[19] = 0.0;
	      sa[20] = 0.0;
	      sa[21] = 0.0;
	      sa[22] = 0.0;
	      sa[23] = 0.0;
	      sa[24] = 0.0;
	      sa[25] = 0.0;
	      sa[26] = 0.0;
	      sa[27] = 0.0;
	      sa[28] = 0.0;
	      sa[29] = 0.0;
	      sa[30] = 0.0;
	      sa[31] = 0.0;
	      sa[32] = 0.0;
	      sa[33] = 0.0;
	      sa[34] = 0.0;
	      sa[35] = 0.0;
	      sa[36] = 0.0;
	      sa[37] = 0.0;
	      sa[38] = 0.0;
	      sa[39] = 0.0;
	      sa[40] = 0.0;
	      sa[41] = 0.0;
	      sa[42] = 0.0;
	    }
	  }
	}
	// Neuron activation values for Tanh layer
	class DeepLearning_model_R_1481832873762_1608_Activation_8 implements java.io.Serializable {
	  public static final double[] VALUES = new double[10];
	  static {
	    DeepLearning_model_R_1481832873762_1608_Activation_8_0.fill(VALUES);
	  }
	  static final class DeepLearning_model_R_1481832873762_1608_Activation_8_0 implements java.io.Serializable {
	    static final void fill(double[] sa) {
	      sa[0] = 0.0;
	      sa[1] = 0.0;
	      sa[2] = 0.0;
	      sa[3] = 0.0;
	      sa[4] = 0.0;
	      sa[5] = 0.0;
	      sa[6] = 0.0;
	      sa[7] = 0.0;
	      sa[8] = 0.0;
	      sa[9] = 0.0;
	    }
	  }
	}
	// Neuron bias values for Input layer
	class DeepLearning_model_R_1481832873762_1608_Bias_0 implements java.io.Serializable {
	  public static final double[] VALUES = null;
	}
	// Neuron bias values for Tanh layer
	class DeepLearning_model_R_1481832873762_1608_Bias_1 implements java.io.Serializable {
	  public static final double[] VALUES = new double[43];
	  static {
	    DeepLearning_model_R_1481832873762_1608_Bias_1_0.fill(VALUES);
	  }
	  static final class DeepLearning_model_R_1481832873762_1608_Bias_1_0 implements java.io.Serializable {
	    static final void fill(double[] sa) {
	      sa[0] = -0.19047642581030552;
	      sa[1] = 0.19998395804911104;
	      sa[2] = 0.01838414807102495;
	      sa[3] = -0.6197106589345929;
	      sa[4] = -0.1533008944419321;
	      sa[5] = 0.5882495261304486;
	      sa[6] = 0.44819057783552185;
	      sa[7] = 0.25427248201151303;
	      sa[8] = 0.7351348566734984;
	      sa[9] = -0.12462373278289607;
	      sa[10] = 0.07909734631290465;
	      sa[11] = 0.12970618865456415;
	      sa[12] = 0.3244197538757126;
	      sa[13] = 0.4822219417207664;
	      sa[14] = 0.17284098127259967;
	      sa[15] = 0.2974221840906397;
	      sa[16] = -0.21737677465171748;
	      sa[17] = -0.5772967424438794;
	      sa[18] = -0.7357617219991786;
	      sa[19] = -0.43224352404144456;
	      sa[20] = -0.13683521216741612;
	      sa[21] = -0.33380968454332804;
	      sa[22] = 0.5339419192128034;
	      sa[23] = 0.2526624309102135;
	      sa[24] = -0.38426055660841835;
	      sa[25] = -0.2896875237114181;
	      sa[26] = 0.207381605884563;
	      sa[27] = 0.29841363926137976;
	      sa[28] = -0.49789006578221306;
	      sa[29] = 0.0010803386664067552;
	      sa[30] = 0.3860464039271275;
	      sa[31] = -0.42693759879945614;
	      sa[32] = -0.14451595795729644;
	      sa[33] = 0.8941788219309618;
	      sa[34] = -0.2995606574652518;
	      sa[35] = -0.7515492172528053;
	      sa[36] = 0.5372541086336721;
	      sa[37] = 0.5103155587174057;
	      sa[38] = 0.42609047974994113;
	      sa[39] = 1.000883555775758;
	      sa[40] = 0.28207136649559583;
	      sa[41] = -0.23323898355820635;
	      sa[42] = -0.4153132964579661;
	    }
	  }
	}
	// Neuron bias values for Tanh layer
	class DeepLearning_model_R_1481832873762_1608_Bias_2 implements java.io.Serializable {
	  public static final double[] VALUES = new double[20];
	  static {
	    DeepLearning_model_R_1481832873762_1608_Bias_2_0.fill(VALUES);
	  }
	  static final class DeepLearning_model_R_1481832873762_1608_Bias_2_0 implements java.io.Serializable {
	    static final void fill(double[] sa) {
	      sa[0] = 0.3920544189455636;
	      sa[1] = -0.16284972274001575;
	      sa[2] = 0.07661929183988486;
	      sa[3] = -0.8876932985974649;
	      sa[4] = 0.7362313919316767;
	      sa[5] = -0.7585438335228707;
	      sa[6] = -0.10715476656451002;
	      sa[7] = -0.5326199285076121;
	      sa[8] = -0.37086038245266617;
	      sa[9] = 0.018914610354346238;
	      sa[10] = -0.7504331263363899;
	      sa[11] = 0.1647685211356442;
	      sa[12] = -0.4388324170499903;
	      sa[13] = 0.1385494823684087;
	      sa[14] = -0.15891818608694944;
	      sa[15] = -0.9726293115868428;
	      sa[16] = -0.3381608353399811;
	      sa[17] = 0.628277305888977;
	      sa[18] = 0.0689568149373973;
	      sa[19] = -0.6427691031044014;
	    }
	  }
	}
	// Neuron bias values for Tanh layer
	class DeepLearning_model_R_1481832873762_1608_Bias_3 implements java.io.Serializable {
	  public static final double[] VALUES = new double[5];
	  static {
	    DeepLearning_model_R_1481832873762_1608_Bias_3_0.fill(VALUES);
	  }
	  static final class DeepLearning_model_R_1481832873762_1608_Bias_3_0 implements java.io.Serializable {
	    static final void fill(double[] sa) {
	      sa[0] = 0.3174657930658847;
	      sa[1] = -0.05740828338592705;
	      sa[2] = -0.12844396336892253;
	      sa[3] = -0.41004238922584463;
	      sa[4] = -0.3646661313016726;
	    }
	  }
	}
	// Neuron bias values for Tanh layer
	class DeepLearning_model_R_1481832873762_1608_Bias_4 implements java.io.Serializable {
	  public static final double[] VALUES = new double[2];
	  static {
	    DeepLearning_model_R_1481832873762_1608_Bias_4_0.fill(VALUES);
	  }
	  static final class DeepLearning_model_R_1481832873762_1608_Bias_4_0 implements java.io.Serializable {
	    static final void fill(double[] sa) {
	      sa[0] = -0.03609193203824564;
	      sa[1] = -0.09529898258493348;
	    }
	  }
	}
	// Neuron bias values for Tanh layer
	class DeepLearning_model_R_1481832873762_1608_Bias_5 implements java.io.Serializable {
	  public static final double[] VALUES = new double[5];
	  static {
	    DeepLearning_model_R_1481832873762_1608_Bias_5_0.fill(VALUES);
	  }
	  static final class DeepLearning_model_R_1481832873762_1608_Bias_5_0 implements java.io.Serializable {
	    static final void fill(double[] sa) {
	      sa[0] = 0.7051220199662217;
	      sa[1] = -0.3670793189846275;
	      sa[2] = 0.5261397650025206;
	      sa[3] = 0.10618101391506458;
	      sa[4] = 0.058138326216147215;
	    }
	  }
	}
	// Neuron bias values for Tanh layer
	class DeepLearning_model_R_1481832873762_1608_Bias_6 implements java.io.Serializable {
	  public static final double[] VALUES = new double[20];
	  static {
	    DeepLearning_model_R_1481832873762_1608_Bias_6_0.fill(VALUES);
	  }
	  static final class DeepLearning_model_R_1481832873762_1608_Bias_6_0 implements java.io.Serializable {
	    static final void fill(double[] sa) {
	      sa[0] = -0.5245207676110372;
	      sa[1] = -0.19472816341291668;
	      sa[2] = 1.5706840671289357;
	      sa[3] = -0.06596578523309082;
	      sa[4] = -0.26230923480731544;
	      sa[5] = 0.9804959289031135;
	      sa[6] = 0.26453535415454904;
	      sa[7] = 0.3095295706780472;
	      sa[8] = -0.48370362658147503;
	      sa[9] = -0.03264902526950217;
	      sa[10] = -0.26894575325213244;
	      sa[11] = 0.17343084718299023;
	      sa[12] = 0.3171685698663519;
	      sa[13] = -0.3698921694439763;
	      sa[14] = 0.11630806033665625;
	      sa[15] = 0.049829682516025854;
	      sa[16] = 0.08164500965838445;
	      sa[17] = -0.18830692658963968;
	      sa[18] = 2.2017566642577857;
	      sa[19] = 0.7853171569677235;
	    }
	  }
	}
	// Neuron bias values for Tanh layer
	class DeepLearning_model_R_1481832873762_1608_Bias_7 implements java.io.Serializable {
	  public static final double[] VALUES = new double[43];
	  static {
	    DeepLearning_model_R_1481832873762_1608_Bias_7_0.fill(VALUES);
	  }
	  static final class DeepLearning_model_R_1481832873762_1608_Bias_7_0 implements java.io.Serializable {
	    static final void fill(double[] sa) {
	      sa[0] = 0.06307603330398388;
	      sa[1] = 0.2814075164496145;
	      sa[2] = -0.015378285407716333;
	      sa[3] = 0.07232735417669169;
	      sa[4] = -0.10374520475128515;
	      sa[5] = 0.5964948055498667;
	      sa[6] = -0.2829447576232286;
	      sa[7] = -0.012119407471184312;
	      sa[8] = 0.22179500854257944;
	      sa[9] = -0.06863959759439153;
	      sa[10] = -0.40033139766679293;
	      sa[11] = -0.9290357829375673;
	      sa[12] = -0.6550650186328567;
	      sa[13] = -0.9771888975664491;
	      sa[14] = -0.10441209586705998;
	      sa[15] = -0.46295616005695545;
	      sa[16] = 0.0872531843040297;
	      sa[17] = -0.07705463572634377;
	      sa[18] = -0.1834200441630686;
	      sa[19] = -0.11032332158965212;
	      sa[20] = 0.6980504847895541;
	      sa[21] = -0.16707222633948227;
	      sa[22] = -0.11476033004647616;
	      sa[23] = -0.603619043950698;
	      sa[24] = 0.06278591129374074;
	      sa[25] = -0.21584464911654086;
	      sa[26] = 0.006319297767885439;
	      sa[27] = 0.42321110323602246;
	      sa[28] = -0.5780045596714876;
	      sa[29] = -1.0588044668514194;
	      sa[30] = -0.017380619256809747;
	      sa[31] = -0.3072990265797101;
	      sa[32] = -0.09963547703563995;
	      sa[33] = -0.461605462298576;
	      sa[34] = -0.1389766382608773;
	      sa[35] = -0.1401930833402148;
	      sa[36] = -0.09571397139338968;
	      sa[37] = 0.11425535495052515;
	      sa[38] = -0.1481433128509225;
	      sa[39] = 0.2676060905391359;
	      sa[40] = -0.14436065414424015;
	      sa[41] = 0.14954708226641553;
	      sa[42] = -0.29606355889660796;
	    }
	  }
	}
	// Neuron bias values for Tanh layer
	class DeepLearning_model_R_1481832873762_1608_Bias_8 implements java.io.Serializable {
	  public static final double[] VALUES = new double[10];
	  static {
	    DeepLearning_model_R_1481832873762_1608_Bias_8_0.fill(VALUES);
	  }
	  static final class DeepLearning_model_R_1481832873762_1608_Bias_8_0 implements java.io.Serializable {
	    static final void fill(double[] sa) {
	      sa[0] = 0.03780252792110209;
	      sa[1] = 0.19484341474787564;
	      sa[2] = 0.04959516797764844;
	      sa[3] = 0.09368599953313957;
	      sa[4] = -0.10807022596529112;
	      sa[5] = -0.23882425215019695;
	      sa[6] = -0.1815537335254263;
	      sa[7] = -0.06512967733276621;
	      sa[8] = -0.3343385673613825;
	      sa[9] = 0.08752181489530603;
	    }
	  }
	}
	class DeepLearning_model_R_1481832873762_1608_Weight_0 implements java.io.Serializable {
	  public static final float[] VALUES = null;
	}
	// Neuron weights connecting Input and Tanh layer
	class DeepLearning_model_R_1481832873762_1608_Weight_1 implements java.io.Serializable {
	  public static final float[] VALUES = new float[430];
	  static {
	    DeepLearning_model_R_1481832873762_1608_Weight_1_0.fill(VALUES);
	  }
	  static final class DeepLearning_model_R_1481832873762_1608_Weight_1_0 implements java.io.Serializable {
	    static final void fill(float[] sa) {
	      sa[0] = 0.103346035f;
	      sa[1] = 0.4275357f;
	      sa[2] = -0.38700688f;
	      sa[3] = 0.018367078f;
	      sa[4] = 0.62453306f;
	      sa[5] = 0.51266235f;
	      sa[6] = 0.40914994f;
	      sa[7] = -0.241622f;
	      sa[8] = 1.2930816f;
	      sa[9] = 0.18814348f;
	      sa[10] = 0.26790056f;
	      sa[11] = -1.007282f;
	      sa[12] = 1.5349975f;
	      sa[13] = -0.45444316f;
	      sa[14] = -0.18959239f;
	      sa[15] = 0.112438574f;
	      sa[16] = -0.39512822f;
	      sa[17] = 0.46956983f;
	      sa[18] = -0.33707115f;
	      sa[19] = -0.85869527f;
	      sa[20] = 0.31409183f;
	      sa[21] = 0.12458099f;
	      sa[22] = -0.012689896f;
	      sa[23] = -0.5535172f;
	      sa[24] = 0.009765942f;
	      sa[25] = -1.2074848f;
	      sa[26] = -0.6961879f;
	      sa[27] = -0.62971824f;
	      sa[28] = -0.7785104f;
	      sa[29] = 0.05177585f;
	      sa[30] = -0.2799908f;
	      sa[31] = -0.36640212f;
	      sa[32] = -1.0590122f;
	      sa[33] = -0.15338255f;
	      sa[34] = -0.9476007f;
	      sa[35] = -0.23683941f;
	      sa[36] = -0.2004105f;
	      sa[37] = 0.2018969f;
	      sa[38] = -0.6180475f;
	      sa[39] = -0.44796374f;
	      sa[40] = -0.41681206f;
	      sa[41] = 0.38780823f;
	      sa[42] = -0.32686225f;
	      sa[43] = 0.74970806f;
	      sa[44] = -0.4528935f;
	      sa[45] = 1.6511528f;
	      sa[46] = 0.72566247f;
	      sa[47] = 0.85638255f;
	      sa[48] = 0.14832555f;
	      sa[49] = -1.3977308f;
	      sa[50] = -0.7110478f;
	      sa[51] = 0.24100593f;
	      sa[52] = 1.428307f;
	      sa[53] = -0.42619768f;
	      sa[54] = 0.954414f;
	      sa[55] = -0.0949227f;
	      sa[56] = 0.04234649f;
	      sa[57] = 0.15932104f;
	      sa[58] = 0.5907355f;
	      sa[59] = 1.3646482f;
	      sa[60] = 0.75812685f;
	      sa[61] = -0.21275117f;
	      sa[62] = 1.5986615f;
	      sa[63] = 0.34395292f;
	      sa[64] = -0.13649565f;
	      sa[65] = -0.11747723f;
	      sa[66] = 0.62177604f;
	      sa[67] = -0.20326452f;
	      sa[68] = 0.014256373f;
	      sa[69] = 0.985535f;
	      sa[70] = -0.108216144f;
	      sa[71] = -0.8984034f;
	      sa[72] = 0.6898336f;
	      sa[73] = 0.3007615f;
	      sa[74] = 0.74451643f;
	      sa[75] = 0.39167923f;
	      sa[76] = -1.463964f;
	      sa[77] = 0.45097905f;
	      sa[78] = -0.31726864f;
	      sa[79] = -0.90459704f;
	      sa[80] = 0.13303927f;
	      sa[81] = -1.3720615f;
	      sa[82] = 1.1067357f;
	      sa[83] = -0.022529675f;
	      sa[84] = -0.511365f;
	      sa[85] = 0.29090178f;
	      sa[86] = 0.12302171f;
	      sa[87] = 0.8396865f;
	      sa[88] = -0.26631176f;
	      sa[89] = -0.46540976f;
	      sa[90] = -0.43630627f;
	      sa[91] = -0.7594916f;
	      sa[92] = 1.0910623f;
	      sa[93] = 0.45817783f;
	      sa[94] = -0.017804818f;
	      sa[95] = 0.14378634f;
	      sa[96] = -0.57488966f;
	      sa[97] = -0.14211692f;
	      sa[98] = 0.041337825f;
	      sa[99] = -0.42997265f;
	      sa[100] = 0.36462224f;
	      sa[101] = 0.32770294f;
	      sa[102] = 0.3187278f;
	      sa[103] = -0.01722095f;
	      sa[104] = -0.052397143f;
	      sa[105] = -0.108175345f;
	      sa[106] = 1.2543063f;
	      sa[107] = -0.016019596f;
	      sa[108] = 0.8767975f;
	      sa[109] = -0.4889307f;
	      sa[110] = 0.83885396f;
	      sa[111] = 0.5112222f;
	      sa[112] = -0.15621717f;
	      sa[113] = 0.14461169f;
	      sa[114] = 0.18426614f;
	      sa[115] = -0.037479855f;
	      sa[116] = -0.08597595f;
	      sa[117] = -0.38225904f;
	      sa[118] = 0.253279f;
	      sa[119] = 1.0561526f;
	      sa[120] = -0.16640387f;
	      sa[121] = 0.96403605f;
	      sa[122] = -0.19237122f;
	      sa[123] = -0.0017652666f;
	      sa[124] = 0.25988454f;
	      sa[125] = -0.5071109f;
	      sa[126] = -0.47151086f;
	      sa[127] = 0.3815929f;
	      sa[128] = 0.5943446f;
	      sa[129] = -0.9955339f;
	      sa[130] = 1.1630468f;
	      sa[131] = 0.16365188f;
	      sa[132] = 0.16029488f;
	      sa[133] = 0.16246736f;
	      sa[134] = -1.4959239f;
	      sa[135] = -0.28418142f;
	      sa[136] = 0.904931f;
	      sa[137] = 0.4835944f;
	      sa[138] = -0.94239306f;
	      sa[139] = 0.06380613f;
	      sa[140] = -0.5643753f;
	      sa[141] = -0.14608021f;
	      sa[142] = -0.41393977f;
	      sa[143] = 0.70536774f;
	      sa[144] = 0.06359615f;
	      sa[145] = 0.85371107f;
	      sa[146] = 0.31469852f;
	      sa[147] = 0.51894826f;
	      sa[148] = 0.28821534f;
	      sa[149] = -0.53833264f;
	      sa[150] = 0.68454075f;
	      sa[151] = 0.3777617f;
	      sa[152] = -0.006657336f;
	      sa[153] = 0.45822045f;
	      sa[154] = -0.75617063f;
	      sa[155] = -0.13530582f;
	      sa[156] = -0.30600438f;
	      sa[157] = 0.38046673f;
	      sa[158] = 0.05076426f;
	      sa[159] = -1.920063f;
	      sa[160] = -0.767545f;
	      sa[161] = 0.38948837f;
	      sa[162] = 0.82939625f;
	      sa[163] = 0.12675458f;
	      sa[164] = 0.90461147f;
	      sa[165] = -0.09480349f;
	      sa[166] = -0.12471322f;
	      sa[167] = -0.08949227f;
	      sa[168] = 1.7278296f;
	      sa[169] = 0.29815316f;
	      sa[170] = -0.76650107f;
	      sa[171] = 0.6190532f;
	      sa[172] = -0.092394985f;
	      sa[173] = 0.1865654f;
	      sa[174] = 0.21945836f;
	      sa[175] = 0.90864295f;
	      sa[176] = 0.717548f;
	      sa[177] = 0.28277856f;
	      sa[178] = 0.767878f;
	      sa[179] = 0.79418045f;
	      sa[180] = 0.4777087f;
	      sa[181] = 0.38838217f;
	      sa[182] = 0.29159144f;
	      sa[183] = -0.5816309f;
	      sa[184] = 0.26353335f;
	      sa[185] = -0.72628117f;
	      sa[186] = 0.091179974f;
	      sa[187] = -1.0848948f;
	      sa[188] = -0.36431453f;
	      sa[189] = 0.13845402f;
	      sa[190] = -0.15916249f;
	      sa[191] = 0.36800325f;
	      sa[192] = -0.48150653f;
	      sa[193] = -0.81185836f;
	      sa[194] = -0.45661247f;
	      sa[195] = -0.51799536f;
	      sa[196] = -0.17251489f;
	      sa[197] = -0.3881615f;
	      sa[198] = -0.40000144f;
	      sa[199] = 0.9382885f;
	      sa[200] = -0.745663f;
	      sa[201] = 0.20705232f;
	      sa[202] = -1.4023774f;
	      sa[203] = 0.05270748f;
	      sa[204] = 0.17426407f;
	      sa[205] = 0.56563985f;
	      sa[206] = 0.020078756f;
	      sa[207] = 0.16487847f;
	      sa[208] = -0.57412815f;
	      sa[209] = 0.5149249f;
	      sa[210] = -0.082637995f;
	      sa[211] = 0.53267586f;
	      sa[212] = -0.49773517f;
	      sa[213] = 0.58503157f;
	      sa[214] = -0.57011896f;
	      sa[215] = 1.4959583f;
	      sa[216] = 0.4045532f;
	      sa[217] = 0.49667445f;
	      sa[218] = 0.047850735f;
	      sa[219] = 0.063851126f;
	      sa[220] = 0.4291429f;
	      sa[221] = 0.02169448f;
	      sa[222] = -0.7550759f;
	      sa[223] = -0.43507695f;
	      sa[224] = -1.0814115f;
	      sa[225] = -1.6609807f;
	      sa[226] = 0.7356325f;
	      sa[227] = -0.67192364f;
	      sa[228] = -1.1489377f;
	      sa[229] = 0.105067626f;
	      sa[230] = 0.5412872f;
	      sa[231] = 0.67801976f;
	      sa[232] = 0.23536195f;
	      sa[233] = -0.34237593f;
	      sa[234] = -0.12463602f;
	      sa[235] = -1.0271308f;
	      sa[236] = -0.7058829f;
	      sa[237] = -0.5483774f;
	      sa[238] = -0.64457935f;
	      sa[239] = -0.7061893f;
	      sa[240] = 0.43675375f;
	      sa[241] = -0.3426416f;
	      sa[242] = -0.04799313f;
	      sa[243] = -0.29288873f;
	      sa[244] = -1.0027376f;
	      sa[245] = 0.1362769f;
	      sa[246] = 0.47402328f;
	      sa[247] = -0.6311409f;
	      sa[248] = -0.31404236f;
	      sa[249] = -0.78589493f;
	      sa[250] = 0.012744296f;
	      sa[251] = 1.0729972f;
	      sa[252] = -0.8132272f;
	      sa[253] = -0.6034197f;
	      sa[254] = 0.19995542f;
	      sa[255] = 0.271934f;
	      sa[256] = 1.0097681f;
	      sa[257] = -0.33793285f;
	      sa[258] = 0.49460536f;
	      sa[259] = 0.04152257f;
	      sa[260] = 0.44911656f;
	      sa[261] = 0.6750618f;
	      sa[262] = 0.3456595f;
	      sa[263] = -0.46978688f;
	      sa[264] = 0.20647624f;
	      sa[265] = -1.4048386f;
	      sa[266] = 0.057292305f;
	      sa[267] = -0.10067952f;
	      sa[268] = 0.5899822f;
	      sa[269] = 0.023689361f;
	      sa[270] = 0.44593707f;
	      sa[271] = 0.8496623f;
	      sa[272] = 0.9963614f;
	      sa[273] = -0.38012832f;
	      sa[274] = -0.83955216f;
	      sa[275] = -0.39307165f;
	      sa[276] = -0.042747643f;
	      sa[277] = -0.009229281f;
	      sa[278] = 0.21387258f;
	      sa[279] = -0.3599264f;
	      sa[280] = 0.48875648f;
	      sa[281] = 1.0987408f;
	      sa[282] = 0.45008478f;
	      sa[283] = -0.41405097f;
	      sa[284] = -0.37483948f;
	      sa[285] = -0.24908583f;
	      sa[286] = -0.2400484f;
	      sa[287] = -0.6935376f;
	      sa[288] = -0.37401834f;
	      sa[289] = -0.40098098f;
	      sa[290] = 0.7965374f;
	      sa[291] = 0.6838048f;
	      sa[292] = 0.12748055f;
	      sa[293] = 0.20936805f;
	      sa[294] = -0.7606347f;
	      sa[295] = 0.06029943f;
	      sa[296] = -0.06777785f;
	      sa[297] = -0.06876474f;
	      sa[298] = -0.29263777f;
	      sa[299] = -0.99402034f;
	      sa[300] = -0.48216966f;
	      sa[301] = -1.2510165f;
	      sa[302] = 0.68906844f;
	      sa[303] = 9.4456575E-4f;
	      sa[304] = 0.5619832f;
	      sa[305] = 0.0036202199f;
	      sa[306] = -0.33912462f;
	      sa[307] = 2.4703544E-4f;
	      sa[308] = 0.45483586f;
	      sa[309] = -0.2780943f;
	      sa[310] = -0.5858977f;
	      sa[311] = -0.32882044f;
	      sa[312] = -0.64478344f;
	      sa[313] = -0.40600842f;
	      sa[314] = -0.46911177f;
	      sa[315] = 0.05769763f;
	      sa[316] = 0.61443466f;
	      sa[317] = 0.4389209f;
	      sa[318] = 0.08531838f;
	      sa[319] = -0.22479214f;
	      sa[320] = -0.6293612f;
	      sa[321] = 0.0103665795f;
	      sa[322] = -0.9153428f;
	      sa[323] = -0.12070816f;
	      sa[324] = -0.56951195f;
	      sa[325] = -0.76553464f;
	      sa[326] = -0.7895054f;
	      sa[327] = 0.05619537f;
	      sa[328] = -1.4739479f;
	      sa[329] = -0.21013209f;
	      sa[330] = 0.2797215f;
	      sa[331] = -0.22007558f;
	      sa[332] = 0.82820547f;
	      sa[333] = 0.6076783f;
	      sa[334] = 0.24862789f;
	      sa[335] = 0.64673376f;
	      sa[336] = 0.0052535115f;
	      sa[337] = 0.5367874f;
	      sa[338] = 0.9088147f;
	      sa[339] = -0.5821549f;
	      sa[340] = -0.7528015f;
	      sa[341] = -0.6901368f;
	      sa[342] = -0.44028267f;
	      sa[343] = -0.47020626f;
	      sa[344] = 0.46734968f;
	      sa[345] = 0.29645517f;
	      sa[346] = -0.19848211f;
	      sa[347] = 0.4083872f;
	      sa[348] = -0.70020634f;
	      sa[349] = -1.1926743f;
	      sa[350] = -0.34895164f;
	      sa[351] = 0.8436326f;
	      sa[352] = -0.30370337f;
	      sa[353] = -0.032938004f;
	      sa[354] = 0.48064077f;
	      sa[355] = 1.4081193f;
	      sa[356] = 0.91379964f;
	      sa[357] = -0.3428395f;
	      sa[358] = 1.6745517f;
	      sa[359] = 0.4368079f;
	      sa[360] = 1.2616493f;
	      sa[361] = 0.8940135f;
	      sa[362] = 0.24059929f;
	      sa[363] = 0.22725606f;
	      sa[364] = -0.6142526f;
	      sa[365] = 0.29357013f;
	      sa[366] = 2.1779804f;
	      sa[367] = -0.17465046f;
	      sa[368] = 0.58632237f;
	      sa[369] = -0.0851458f;
	      sa[370] = -0.452976f;
	      sa[371] = -0.9683122f;
	      sa[372] = -0.26014614f;
	      sa[373] = 0.3797239f;
	      sa[374] = -0.02545003f;
	      sa[375] = 0.17246498f;
	      sa[376] = -0.14821365f;
	      sa[377] = 0.7482079f;
	      sa[378] = -0.25974497f;
	      sa[379] = 0.71571094f;
	      sa[380] = -0.41941544f;
	      sa[381] = -0.23707475f;
	      sa[382] = 0.2894593f;
	      sa[383] = -0.45506546f;
	      sa[384] = 0.59351695f;
	      sa[385] = -1.263678f;
	      sa[386] = -0.2403218f;
	      sa[387] = -0.09910918f;
	      sa[388] = 0.5453462f;
	      sa[389] = -1.3365567f;
	      sa[390] = -0.484564f;
	      sa[391] = -0.70744085f;
	      sa[392] = -0.13047843f;
	      sa[393] = 0.037511576f;
	      sa[394] = 0.24187385f;
	      sa[395] = 0.6277329f;
	      sa[396] = -0.60453516f;
	      sa[397] = 1.1837908f;
	      sa[398] = -0.11765724f;
	      sa[399] = -0.40870672f;
	      sa[400] = 0.36176604f;
	      sa[401] = -0.35784125f;
	      sa[402] = -0.5925299f;
	      sa[403] = -0.113793224f;
	      sa[404] = -0.71424913f;
	      sa[405] = -0.21734472f;
	      sa[406] = 0.24436918f;
	      sa[407] = 0.33508518f;
	      sa[408] = -0.05197541f;
	      sa[409] = -0.7443339f;
	      sa[410] = 0.15982266f;
	      sa[411] = 0.35710046f;
	      sa[412] = 0.8123917f;
	      sa[413] = -0.018696882f;
	      sa[414] = 0.9566828f;
	      sa[415] = 0.38218018f;
	      sa[416] = -0.07418295f;
	      sa[417] = -0.124700636f;
	      sa[418] = 1.7815931f;
	      sa[419] = 0.14281654f;
	      sa[420] = -0.545815f;
	      sa[421] = 0.26660007f;
	      sa[422] = -0.52562517f;
	      sa[423] = -0.69688f;
	      sa[424] = 0.034989774f;
	      sa[425] = 0.09961178f;
	      sa[426] = 0.82395786f;
	      sa[427] = -0.18898237f;
	      sa[428] = -0.012024256f;
	      sa[429] = 0.41324994f;
	    }
	  }
	}
	// Neuron weights connecting Tanh and Tanh layer
	class DeepLearning_model_R_1481832873762_1608_Weight_2 implements java.io.Serializable {
	  public static final float[] VALUES = new float[860];
	  static {
	    DeepLearning_model_R_1481832873762_1608_Weight_2_0.fill(VALUES);
	  }
	  static final class DeepLearning_model_R_1481832873762_1608_Weight_2_0 implements java.io.Serializable {
	    static final void fill(float[] sa) {
	      sa[0] = -0.34542045f;
	      sa[1] = 0.8201511f;
	      sa[2] = 0.108008765f;
	      sa[3] = -0.81290096f;
	      sa[4] = -0.5877007f;
	      sa[5] = 0.8113387f;
	      sa[6] = 0.6225073f;
	      sa[7] = 0.8545541f;
	      sa[8] = 0.4188469f;
	      sa[9] = 0.46493208f;
	      sa[10] = -0.34931213f;
	      sa[11] = 0.14775921f;
	      sa[12] = -0.23338473f;
	      sa[13] = 0.25364083f;
	      sa[14] = -0.4958068f;
	      sa[15] = 0.06359967f;
	      sa[16] = 0.118721694f;
	      sa[17] = -0.60525435f;
	      sa[18] = 0.42282793f;
	      sa[19] = -0.25803575f;
	      sa[20] = -0.6685475f;
	      sa[21] = -0.57391375f;
	      sa[22] = -0.2561747f;
	      sa[23] = -0.07649062f;
	      sa[24] = -0.60354435f;
	      sa[25] = -0.90520394f;
	      sa[26] = 0.36764872f;
	      sa[27] = -0.15941346f;
	      sa[28] = 0.045908965f;
	      sa[29] = -0.0827602f;
	      sa[30] = 0.1699703f;
	      sa[31] = -0.85538703f;
	      sa[32] = -0.30397114f;
	      sa[33] = 0.017798908f;
	      sa[34] = 0.04888139f;
	      sa[35] = -0.69534457f;
	      sa[36] = -0.62427497f;
	      sa[37] = -0.037307713f;
	      sa[38] = 0.20815128f;
	      sa[39] = 0.15145637f;
	      sa[40] = -0.26720697f;
	      sa[41] = 0.3309408f;
	      sa[42] = -0.7110563f;
	      sa[43] = 0.41041273f;
	      sa[44] = -0.31804302f;
	      sa[45] = 0.19945209f;
	      sa[46] = -0.19696149f;
	      sa[47] = -0.8274062f;
	      sa[48] = 0.5330404f;
	      sa[49] = 0.32560754f;
	      sa[50] = -0.6351329f;
	      sa[51] = -0.15650083f;
	      sa[52] = -0.5446036f;
	      sa[53] = 0.27054128f;
	      sa[54] = 0.35187167f;
	      sa[55] = -0.63673884f;
	      sa[56] = -0.037738934f;
	      sa[57] = -0.4093476f;
	      sa[58] = -0.9246634f;
	      sa[59] = -0.036594518f;
	      sa[60] = 0.27485925f;
	      sa[61] = 0.0030295744f;
	      sa[62] = -0.14264211f;
	      sa[63] = 0.20826387f;
	      sa[64] = -0.22569048f;
	      sa[65] = 0.52666354f;
	      sa[66] = -0.4605376f;
	      sa[67] = -0.14085199f;
	      sa[68] = 0.015774837f;
	      sa[69] = 0.0819687f;
	      sa[70] = -0.24699637f;
	      sa[71] = -0.3657465f;
	      sa[72] = -0.63910687f;
	      sa[73] = 0.4282749f;
	      sa[74] = 0.32177696f;
	      sa[75] = -0.36672893f;
	      sa[76] = -0.14640228f;
	      sa[77] = -0.082402326f;
	      sa[78] = -0.036582258f;
	      sa[79] = 0.37046778f;
	      sa[80] = 0.5145537f;
	      sa[81] = -0.2695687f;
	      sa[82] = -0.16150208f;
	      sa[83] = -0.0389541f;
	      sa[84] = 0.2862653f;
	      sa[85] = 0.4388431f;
	      sa[86] = 0.19316402f;
	      sa[87] = -0.26540223f;
	      sa[88] = 0.37864563f;
	      sa[89] = -0.08807668f;
	      sa[90] = -0.33896324f;
	      sa[91] = -0.18587135f;
	      sa[92] = -0.5335596f;
	      sa[93] = -0.027471757f;
	      sa[94] = -0.43828213f;
	      sa[95] = 0.04982124f;
	      sa[96] = 0.050053634f;
	      sa[97] = -0.029645033f;
	      sa[98] = 0.48551464f;
	      sa[99] = -0.61703354f;
	      sa[100] = 0.121245556f;
	      sa[101] = 0.21033594f;
	      sa[102] = 0.63743716f;
	      sa[103] = -0.40122512f;
	      sa[104] = 0.39274856f;
	      sa[105] = 0.03961283f;
	      sa[106] = -0.20082168f;
	      sa[107] = -0.5507627f;
	      sa[108] = 0.40636477f;
	      sa[109] = 0.44324416f;
	      sa[110] = 0.07228286f;
	      sa[111] = 0.045122817f;
	      sa[112] = 0.77228427f;
	      sa[113] = 0.077237666f;
	      sa[114] = 0.06673266f;
	      sa[115] = -0.09326664f;
	      sa[116] = 0.27174774f;
	      sa[117] = 0.08326542f;
	      sa[118] = 0.11107836f;
	      sa[119] = -0.046440136f;
	      sa[120] = -0.047872435f;
	      sa[121] = -0.10011038f;
	      sa[122] = -0.49783474f;
	      sa[123] = -0.558579f;
	      sa[124] = 0.9446087f;
	      sa[125] = -0.23888958f;
	      sa[126] = -0.120652325f;
	      sa[127] = 0.22736041f;
	      sa[128] = 0.23854828f;
	      sa[129] = 0.015138331f;
	      sa[130] = 0.892566f;
	      sa[131] = -0.025953544f;
	      sa[132] = 0.25057626f;
	      sa[133] = 0.687077f;
	      sa[134] = -0.22377409f;
	      sa[135] = 0.5406746f;
	      sa[136] = 0.2115458f;
	      sa[137] = 0.04135773f;
	      sa[138] = 0.77273446f;
	      sa[139] = 0.45076042f;
	      sa[140] = -0.34624025f;
	      sa[141] = -0.013192718f;
	      sa[142] = -0.3438663f;
	      sa[143] = 0.017652063f;
	      sa[144] = 0.5080109f;
	      sa[145] = 0.3852905f;
	      sa[146] = 0.24321336f;
	      sa[147] = 0.1905362f;
	      sa[148] = -0.06258665f;
	      sa[149] = -0.6227029f;
	      sa[150] = 0.028586846f;
	      sa[151] = -0.37934268f;
	      sa[152] = 0.13369131f;
	      sa[153] = 0.43580058f;
	      sa[154] = 0.20726077f;
	      sa[155] = -0.039887078f;
	      sa[156] = 0.35470992f;
	      sa[157] = 0.7616757f;
	      sa[158] = 0.32585964f;
	      sa[159] = 0.17696008f;
	      sa[160] = -0.08566387f;
	      sa[161] = -0.29741856f;
	      sa[162] = -0.023969414f;
	      sa[163] = 0.21702328f;
	      sa[164] = 0.083337665f;
	      sa[165] = 0.53305614f;
	      sa[166] = -0.749355f;
	      sa[167] = 0.34749824f;
	      sa[168] = -0.23015045f;
	      sa[169] = 0.014722814f;
	      sa[170] = 0.640353f;
	      sa[171] = -0.12359166f;
	      sa[172] = 0.25621247f;
	      sa[173] = -0.7191033f;
	      sa[174] = -0.12766755f;
	      sa[175] = -0.05543764f;
	      sa[176] = 0.12708212f;
	      sa[177] = -0.17719162f;
	      sa[178] = 0.013701498f;
	      sa[179] = -0.71217906f;
	      sa[180] = -0.6059631f;
	      sa[181] = -0.5577894f;
	      sa[182] = -0.075862154f;
	      sa[183] = 0.35454798f;
	      sa[184] = -0.07373197f;
	      sa[185] = 0.5358062f;
	      sa[186] = 0.05122233f;
	      sa[187] = 0.029046936f;
	      sa[188] = -0.23852931f;
	      sa[189] = 0.26030764f;
	      sa[190] = -0.18970914f;
	      sa[191] = 0.114490926f;
	      sa[192] = 0.39132744f;
	      sa[193] = 0.38265574f;
	      sa[194] = 0.100049786f;
	      sa[195] = -0.21049355f;
	      sa[196] = -0.12580681f;
	      sa[197] = 0.73309743f;
	      sa[198] = -0.23057821f;
	      sa[199] = -0.46861926f;
	      sa[200] = -0.050051317f;
	      sa[201] = 0.026220113f;
	      sa[202] = -0.557824f;
	      sa[203] = -0.017433971f;
	      sa[204] = -0.29735917f;
	      sa[205] = -0.07742927f;
	      sa[206] = -0.7244001f;
	      sa[207] = 0.31024024f;
	      sa[208] = 0.87288797f;
	      sa[209] = -0.0576593f;
	      sa[210] = -0.47535032f;
	      sa[211] = -0.08137157f;
	      sa[212] = 0.17583367f;
	      sa[213] = -0.12313589f;
	      sa[214] = -0.1875387f;
	      sa[215] = -0.095771946f;
	      sa[216] = -0.38555175f;
	      sa[217] = 0.32954744f;
	      sa[218] = 1.1060379f;
	      sa[219] = 0.36277106f;
	      sa[220] = -0.9233747f;
	      sa[221] = -1.5807321f;
	      sa[222] = -0.12450214f;
	      sa[223] = -0.6716049f;
	      sa[224] = -0.57038516f;
	      sa[225] = -0.48189268f;
	      sa[226] = -0.47569227f;
	      sa[227] = 0.47143608f;
	      sa[228] = -0.12985045f;
	      sa[229] = -0.2008553f;
	      sa[230] = 0.42717022f;
	      sa[231] = -0.35083553f;
	      sa[232] = -0.16030307f;
	      sa[233] = 0.07508669f;
	      sa[234] = 0.45680317f;
	      sa[235] = 0.7921575f;
	      sa[236] = 0.031560145f;
	      sa[237] = -0.053221703f;
	      sa[238] = 0.40903798f;
	      sa[239] = -0.10774848f;
	      sa[240] = 0.46510282f;
	      sa[241] = 0.1992505f;
	      sa[242] = -0.24887387f;
	      sa[243] = 0.49354723f;
	      sa[244] = 0.084928535f;
	      sa[245] = -0.34405482f;
	      sa[246] = 0.99812526f;
	      sa[247] = 0.9127499f;
	      sa[248] = -0.49615565f;
	      sa[249] = 0.67895585f;
	      sa[250] = -0.34193224f;
	      sa[251] = -0.6680688f;
	      sa[252] = -0.16766062f;
	      sa[253] = 0.5225198f;
	      sa[254] = 0.09635223f;
	      sa[255] = 0.6742676f;
	      sa[256] = -0.578281f;
	      sa[257] = 0.6127862f;
	      sa[258] = 0.1327834f;
	      sa[259] = -0.42288658f;
	      sa[260] = -0.09378639f;
	      sa[261] = -0.24369706f;
	      sa[262] = 0.048456527f;
	      sa[263] = 0.50459397f;
	      sa[264] = -0.10779841f;
	      sa[265] = -0.3885695f;
	      sa[266] = -0.11693532f;
	      sa[267] = -0.11328584f;
	      sa[268] = -0.10469744f;
	      sa[269] = 0.3395987f;
	      sa[270] = 0.3856877f;
	      sa[271] = -0.07312761f;
	      sa[272] = 0.019170126f;
	      sa[273] = -0.27791768f;
	      sa[274] = 0.6738911f;
	      sa[275] = 0.60122937f;
	      sa[276] = -0.08152033f;
	      sa[277] = -0.36925495f;
	      sa[278] = 0.46938467f;
	      sa[279] = 0.22101939f;
	      sa[280] = -0.42541307f;
	      sa[281] = -0.04350309f;
	      sa[282] = -0.38794312f;
	      sa[283] = 0.05146276f;
	      sa[284] = 0.052692443f;
	      sa[285] = -0.015556971f;
	      sa[286] = 0.3030518f;
	      sa[287] = -0.28620327f;
	      sa[288] = -0.39690372f;
	      sa[289] = -0.62098575f;
	      sa[290] = 0.09439509f;
	      sa[291] = 0.4219477f;
	      sa[292] = -0.3190906f;
	      sa[293] = 0.055762976f;
	      sa[294] = -0.52009726f;
	      sa[295] = 0.12780774f;
	      sa[296] = -0.4597742f;
	      sa[297] = -0.12189469f;
	      sa[298] = -0.6725433f;
	      sa[299] = 0.20190369f;
	      sa[300] = -0.16654885f;
	      sa[301] = -0.5351199f;
	      sa[302] = -0.14388795f;
	      sa[303] = 0.21310717f;
	      sa[304] = -0.04754081f;
	      sa[305] = -0.6873545f;
	      sa[306] = 0.1918724f;
	      sa[307] = 0.24841273f;
	      sa[308] = -0.22841923f;
	      sa[309] = -0.28602096f;
	      sa[310] = 0.24767864f;
	      sa[311] = -0.5464497f;
	      sa[312] = 0.38642806f;
	      sa[313] = -0.8292653f;
	      sa[314] = -0.14023761f;
	      sa[315] = -0.77531636f;
	      sa[316] = -0.55415666f;
	      sa[317] = -0.20081253f;
	      sa[318] = 0.17876393f;
	      sa[319] = 0.50991684f;
	      sa[320] = 0.87110263f;
	      sa[321] = 0.055866797f;
	      sa[322] = -0.37471214f;
	      sa[323] = 0.44572455f;
	      sa[324] = -0.06928969f;
	      sa[325] = 0.011635936f;
	      sa[326] = -0.40710428f;
	      sa[327] = -0.25608423f;
	      sa[328] = -0.19017343f;
	      sa[329] = 0.3137365f;
	      sa[330] = -0.359458f;
	      sa[331] = 0.23857233f;
	      sa[332] = 0.20254745f;
	      sa[333] = 0.44281933f;
	      sa[334] = -0.2782726f;
	      sa[335] = -0.7892189f;
	      sa[336] = -0.24694054f;
	      sa[337] = -0.8390167f;
	      sa[338] = 0.34166342f;
	      sa[339] = -0.14659496f;
	      sa[340] = -0.40841952f;
	      sa[341] = -0.16055597f;
	      sa[342] = -0.42184836f;
	      sa[343] = 0.40656802f;
	      sa[344] = 0.53055054f;
	      sa[345] = -0.3347753f;
	      sa[346] = -0.9102951f;
	      sa[347] = -0.3850297f;
	      sa[348] = 0.4372338f;
	      sa[349] = 0.7104936f;
	      sa[350] = 0.21098334f;
	      sa[351] = -0.13762993f;
	      sa[352] = -0.04334628f;
	      sa[353] = -0.11656762f;
	      sa[354] = 0.170548f;
	      sa[355] = -0.0015566217f;
	      sa[356] = 0.046773665f;
	      sa[357] = -0.38440102f;
	      sa[358] = 0.22687632f;
	      sa[359] = -0.06149997f;
	      sa[360] = 1.2780085f;
	      sa[361] = 0.5967084f;
	      sa[362] = 0.0013904956f;
	      sa[363] = -0.1353537f;
	      sa[364] = -0.10814164f;
	      sa[365] = 0.42896035f;
	      sa[366] = -0.66640157f;
	      sa[367] = -0.68461597f;
	      sa[368] = -0.4442959f;
	      sa[369] = 0.52136105f;
	      sa[370] = -0.06827466f;
	      sa[371] = 0.11741348f;
	      sa[372] = -0.18213697f;
	      sa[373] = -0.34966895f;
	      sa[374] = -0.1690879f;
	      sa[375] = -0.017596997f;
	      sa[376] = -0.76860535f;
	      sa[377] = 0.25327933f;
	      sa[378] = -0.017437417f;
	      sa[379] = 1.0464654f;
	      sa[380] = 0.36881614f;
	      sa[381] = -0.077533856f;
	      sa[382] = -0.18742876f;
	      sa[383] = -0.1030544f;
	      sa[384] = -0.718915f;
	      sa[385] = 0.83983207f;
	      sa[386] = 0.30380493f;
	      sa[387] = 0.250452f;
	      sa[388] = 0.06338331f;
	      sa[389] = -0.767709f;
	      sa[390] = 0.18087417f;
	      sa[391] = 0.77749366f;
	      sa[392] = -0.43294543f;
	      sa[393] = -0.099324115f;
	      sa[394] = 0.2556529f;
	      sa[395] = 0.15302953f;
	      sa[396] = 0.29625553f;
	      sa[397] = 0.37894166f;
	      sa[398] = -0.19138658f;
	      sa[399] = -0.025298595f;
	      sa[400] = -0.1189777f;
	      sa[401] = 0.69702995f;
	      sa[402] = 0.42106014f;
	      sa[403] = 0.35977834f;
	      sa[404] = 0.052665975f;
	      sa[405] = -0.27825046f;
	      sa[406] = -0.3651736f;
	      sa[407] = -0.17042173f;
	      sa[408] = 0.21570757f;
	      sa[409] = -0.4829572f;
	      sa[410] = -0.4984014f;
	      sa[411] = 0.11264077f;
	      sa[412] = 0.099611305f;
	      sa[413] = -0.4740505f;
	      sa[414] = -0.37809813f;
	      sa[415] = -0.5569752f;
	      sa[416] = 0.025873337f;
	      sa[417] = 0.28167143f;
	      sa[418] = 0.12881991f;
	      sa[419] = -0.31829295f;
	      sa[420] = 0.15338083f;
	      sa[421] = 0.018582461f;
	      sa[422] = 0.44756186f;
	      sa[423] = 0.34732684f;
	      sa[424] = -0.008615849f;
	      sa[425] = 0.14652653f;
	      sa[426] = 0.31638035f;
	      sa[427] = 0.22748277f;
	      sa[428] = 0.41424724f;
	      sa[429] = -0.10936651f;
	      sa[430] = -0.0827044f;
	      sa[431] = -0.91676635f;
	      sa[432] = -0.04611395f;
	      sa[433] = 0.17469175f;
	      sa[434] = 0.04826043f;
	      sa[435] = -0.7183451f;
	      sa[436] = -0.23997582f;
	      sa[437] = -0.36018157f;
	      sa[438] = -1.0146836f;
	      sa[439] = -0.11810972f;
	      sa[440] = 0.22007583f;
	      sa[441] = 0.43969235f;
	      sa[442] = 0.47180447f;
	      sa[443] = 0.05254358f;
	      sa[444] = -0.08532662f;
	      sa[445] = 0.3849628f;
	      sa[446] = -0.35210845f;
	      sa[447] = 0.18853691f;
	      sa[448] = 0.15486282f;
	      sa[449] = 0.25978053f;
	      sa[450] = -0.05701658f;
	      sa[451] = 0.4259344f;
	      sa[452] = 0.06633708f;
	      sa[453] = 0.52314633f;
	      sa[454] = 0.276199f;
	      sa[455] = 0.38642994f;
	      sa[456] = 0.14182796f;
	      sa[457] = 0.35329896f;
	      sa[458] = 0.87795126f;
	      sa[459] = 0.83206743f;
	      sa[460] = -0.76954263f;
	      sa[461] = -0.31072667f;
	      sa[462] = 0.053645797f;
	      sa[463] = 0.054037604f;
	      sa[464] = 0.26871383f;
	      sa[465] = 0.16438854f;
	      sa[466] = 0.33347577f;
	      sa[467] = -0.85244995f;
	      sa[468] = -0.167421f;
	      sa[469] = -1.1750379f;
	      sa[470] = 0.22942494f;
	      sa[471] = 0.16289416f;
	      sa[472] = -0.29054707f;
	      sa[473] = -0.44937897f;
	      sa[474] = 1.2014892f;
	      sa[475] = 0.17893477f;
	      sa[476] = -0.0037168376f;
	      sa[477] = 0.4269823f;
	      sa[478] = 0.06779809f;
	      sa[479] = 0.4251499f;
	      sa[480] = 0.42512405f;
	      sa[481] = 1.4817429f;
	      sa[482] = 0.6935221f;
	      sa[483] = -0.14754371f;
	      sa[484] = -0.29229915f;
	      sa[485] = -0.39856923f;
	      sa[486] = 0.18942167f;
	      sa[487] = 0.48523942f;
	      sa[488] = 0.3766182f;
	      sa[489] = -0.35476384f;
	      sa[490] = -0.27135625f;
	      sa[491] = -0.41164404f;
	      sa[492] = -0.51396567f;
	      sa[493] = -0.4562139f;
	      sa[494] = 0.35802352f;
	      sa[495] = -0.18356071f;
	      sa[496] = -0.03541761f;
	      sa[497] = 0.19246605f;
	      sa[498] = -0.8184726f;
	      sa[499] = -0.22336388f;
	      sa[500] = -0.014835945f;
	      sa[501] = -0.3825498f;
	      sa[502] = 0.2895932f;
	      sa[503] = 0.28688425f;
	      sa[504] = -0.110386066f;
	      sa[505] = -0.14564513f;
	      sa[506] = 0.54022783f;
	      sa[507] = -0.0504356f;
	      sa[508] = -0.5872136f;
	      sa[509] = 0.35232487f;
	      sa[510] = 0.4378023f;
	      sa[511] = -0.29194468f;
	      sa[512] = 0.18377966f;
	      sa[513] = -0.18358098f;
	      sa[514] = -0.1919314f;
	      sa[515] = -0.7228546f;
	      sa[516] = 0.18955477f;
	      sa[517] = -0.47877616f;
	      sa[518] = -0.11362852f;
	      sa[519] = -0.27592778f;
	      sa[520] = -0.2640642f;
	      sa[521] = 0.25016704f;
	      sa[522] = -0.21439937f;
	      sa[523] = 0.46485344f;
	      sa[524] = -0.56880504f;
	      sa[525] = 0.4786474f;
	      sa[526] = -0.43818218f;
	      sa[527] = 0.22743814f;
	      sa[528] = -0.43547425f;
	      sa[529] = -1.568203f;
	      sa[530] = 0.07626276f;
	      sa[531] = -1.012558f;
	      sa[532] = 0.6590877f;
	      sa[533] = 0.52327645f;
	      sa[534] = 0.13417539f;
	      sa[535] = -0.09691398f;
	      sa[536] = 0.6441776f;
	      sa[537] = -0.027967082f;
	      sa[538] = -0.87738264f;
	      sa[539] = -0.4537578f;
	      sa[540] = -0.31490034f;
	      sa[541] = -0.19129494f;
	      sa[542] = -0.32287076f;
	      sa[543] = -0.6381552f;
	      sa[544] = 0.07389207f;
	      sa[545] = -0.14349252f;
	      sa[546] = 0.35610518f;
	      sa[547] = 0.041933242f;
	      sa[548] = -0.42217886f;
	      sa[549] = 0.1744693f;
	      sa[550] = 0.38374072f;
	      sa[551] = 0.5322504f;
	      sa[552] = -0.9682843f;
	      sa[553] = -0.037424695f;
	      sa[554] = -0.31775528f;
	      sa[555] = -0.26553342f;
	      sa[556] = -0.47572827f;
	      sa[557] = 0.64228433f;
	      sa[558] = 0.19423921f;
	      sa[559] = 0.54977167f;
	      sa[560] = -0.043305278f;
	      sa[561] = 0.14090717f;
	      sa[562] = -0.5178648f;
	      sa[563] = 0.12125802f;
	      sa[564] = 0.4155721f;
	      sa[565] = 0.46624854f;
	      sa[566] = 0.008996144f;
	      sa[567] = 0.29637247f;
	      sa[568] = -0.024880074f;
	      sa[569] = 0.86607236f;
	      sa[570] = 0.019075142f;
	      sa[571] = 0.32705125f;
	      sa[572] = 0.09523331f;
	      sa[573] = 0.13449027f;
	      sa[574] = 0.25730553f;
	      sa[575] = 0.19390067f;
	      sa[576] = 0.09769677f;
	      sa[577] = 0.0594039f;
	      sa[578] = -0.20762181f;
	      sa[579] = -0.5376231f;
	      sa[580] = 0.26010606f;
	      sa[581] = -0.119681686f;
	      sa[582] = 0.31612858f;
	      sa[583] = 0.25154787f;
	      sa[584] = 0.49464235f;
	      sa[585] = 0.6458246f;
	      sa[586] = 0.5024198f;
	      sa[587] = 0.33681867f;
	      sa[588] = 0.5836305f;
	      sa[589] = -0.21066906f;
	      sa[590] = -0.18141116f;
	      sa[591] = -0.90966105f;
	      sa[592] = 0.046839338f;
	      sa[593] = -0.42994508f;
	      sa[594] = 0.55966514f;
	      sa[595] = 1.0661087f;
	      sa[596] = -0.26669213f;
	      sa[597] = -0.060713805f;
	      sa[598] = -0.2012434f;
	      sa[599] = 0.015357967f;
	      sa[600] = 0.99942636f;
	      sa[601] = 0.0061927517f;
	      sa[602] = -0.18087617f;
	      sa[603] = -0.6975476f;
	      sa[604] = 0.27818763f;
	      sa[605] = 0.21052079f;
	      sa[606] = -0.38384432f;
	      sa[607] = 0.06419869f;
	      sa[608] = -0.04028018f;
	      sa[609] = -0.6919923f;
	      sa[610] = -0.37676534f;
	      sa[611] = -0.42313442f;
	      sa[612] = -0.27807313f;
	      sa[613] = -0.017867837f;
	      sa[614] = -0.3810556f;
	      sa[615] = 0.45608166f;
	      sa[616] = -0.25472862f;
	      sa[617] = -0.53515595f;
	      sa[618] = -0.48938698f;
	      sa[619] = 0.068456635f;
	      sa[620] = 0.5791324f;
	      sa[621] = 0.52893144f;
	      sa[622] = 0.40932834f;
	      sa[623] = -0.061025996f;
	      sa[624] = 0.43921697f;
	      sa[625] = 0.26587957f;
	      sa[626] = 0.21687675f;
	      sa[627] = 0.1342468f;
	      sa[628] = 0.2273082f;
	      sa[629] = 0.020157125f;
	      sa[630] = 0.07704261f;
	      sa[631] = -0.21568458f;
	      sa[632] = -0.1705928f;
	      sa[633] = 0.06755737f;
	      sa[634] = 0.25530237f;
	      sa[635] = -0.61893946f;
	      sa[636] = -0.045466628f;
	      sa[637] = 0.17576529f;
	      sa[638] = -0.09913757f;
	      sa[639] = 0.014822271f;
	      sa[640] = -0.09626768f;
	      sa[641] = -0.28188652f;
	      sa[642] = -0.10977611f;
	      sa[643] = -0.3445031f;
	      sa[644] = 0.4064169f;
	      sa[645] = 0.24482886f;
	      sa[646] = 0.060044214f;
	      sa[647] = 0.14196035f;
	      sa[648] = 0.7183861f;
	      sa[649] = 0.56525713f;
	      sa[650] = -0.8507301f;
	      sa[651] = -1.548924f;
	      sa[652] = 0.75402087f;
	      sa[653] = 0.060083706f;
	      sa[654] = 0.24560834f;
	      sa[655] = -0.25298026f;
	      sa[656] = -0.85200536f;
	      sa[657] = 0.20318119f;
	      sa[658] = -0.8089934f;
	      sa[659] = 0.30608416f;
	      sa[660] = 0.5517474f;
	      sa[661] = -0.29116464f;
	      sa[662] = 0.14625403f;
	      sa[663] = 0.098634295f;
	      sa[664] = -0.010229236f;
	      sa[665] = 0.5774268f;
	      sa[666] = 0.3358925f;
	      sa[667] = -0.7097194f;
	      sa[668] = -0.2866207f;
	      sa[669] = 0.26300946f;
	      sa[670] = -0.1076013f;
	      sa[671] = -0.6804388f;
	      sa[672] = -0.50874996f;
	      sa[673] = -0.24227098f;
	      sa[674] = 0.004187854f;
	      sa[675] = -0.16486195f;
	      sa[676] = 0.37051135f;
	      sa[677] = 0.3871123f;
	      sa[678] = -0.44115704f;
	      sa[679] = 1.0511938f;
	      sa[680] = 0.051642884f;
	      sa[681] = -1.2235729f;
	      sa[682] = 0.10379226f;
	      sa[683] = 0.08149814f;
	      sa[684] = -0.110140145f;
	      sa[685] = 0.43058562f;
	      sa[686] = 0.114311285f;
	      sa[687] = -0.15077214f;
	      sa[688] = 0.008000014f;
	      sa[689] = -0.14117202f;
	      sa[690] = -0.5265903f;
	      sa[691] = 0.30681697f;
	      sa[692] = 0.7181224f;
	      sa[693] = -0.32938606f;
	      sa[694] = -0.20012988f;
	      sa[695] = 0.33747062f;
	      sa[696] = 0.24229005f;
	      sa[697] = 0.2926294f;
	      sa[698] = 0.17046775f;
	      sa[699] = -0.79219353f;
	      sa[700] = -0.34940842f;
	      sa[701] = -0.32513782f;
	      sa[702] = 0.37252676f;
	      sa[703] = -0.04955881f;
	      sa[704] = -0.18716633f;
	      sa[705] = 0.028536448f;
	      sa[706] = -0.4364455f;
	      sa[707] = -0.38183117f;
	      sa[708] = 0.39240307f;
	      sa[709] = 0.41767332f;
	      sa[710] = -0.49373695f;
	      sa[711] = -0.69129086f;
	      sa[712] = 0.4412891f;
	      sa[713] = -0.17956792f;
	      sa[714] = -1.062344f;
	      sa[715] = -0.28176054f;
	      sa[716] = -0.06796101f;
	      sa[717] = -0.2887088f;
	      sa[718] = -0.23071237f;
	      sa[719] = 0.52249205f;
	      sa[720] = -0.12627687f;
	      sa[721] = 0.0770697f;
	      sa[722] = 0.3472545f;
	      sa[723] = -0.12727894f;
	      sa[724] = 0.26213214f;
	      sa[725] = 0.15547027f;
	      sa[726] = -0.067426786f;
	      sa[727] = -0.22506861f;
	      sa[728] = 0.2297595f;
	      sa[729] = -0.31168664f;
	      sa[730] = -0.043308523f;
	      sa[731] = -0.21887475f;
	      sa[732] = -0.3102708f;
	      sa[733] = 0.2665201f;
	      sa[734] = 0.06084343f;
	      sa[735] = 0.17591305f;
	      sa[736] = 0.13452484f;
	      sa[737] = -0.41163862f;
	      sa[738] = 0.09505076f;
	      sa[739] = 0.10818927f;
	      sa[740] = 0.1285966f;
	      sa[741] = -0.45793208f;
	      sa[742] = 0.033411838f;
	      sa[743] = -0.17183433f;
	      sa[744] = -0.18377495f;
	      sa[745] = 0.4190923f;
	      sa[746] = -0.24572879f;
	      sa[747] = -0.17412916f;
	      sa[748] = 0.18221763f;
	      sa[749] = -0.25369942f;
	      sa[750] = 0.16128805f;
	      sa[751] = 0.6741702f;
	      sa[752] = 0.18788147f;
	      sa[753] = 0.017630192f;
	      sa[754] = -0.60791373f;
	      sa[755] = -0.30697232f;
	      sa[756] = -0.34799075f;
	      sa[757] = -0.3166597f;
	      sa[758] = -0.78011054f;
	      sa[759] = -0.3146096f;
	      sa[760] = -0.5883311f;
	      sa[761] = 0.38835552f;
	      sa[762] = 0.43100604f;
	      sa[763] = 0.4402835f;
	      sa[764] = -0.08823792f;
	      sa[765] = 0.40341687f;
	      sa[766] = 0.01986341f;
	      sa[767] = -0.5029825f;
	      sa[768] = 0.83811265f;
	      sa[769] = 0.15724958f;
	      sa[770] = 0.22985016f;
	      sa[771] = 0.15092413f;
	      sa[772] = -0.37150413f;
	      sa[773] = 0.017051296f;
	      sa[774] = -0.2703434f;
	      sa[775] = 0.156381f;
	      sa[776] = 0.04328519f;
	      sa[777] = -0.4177279f;
	      sa[778] = -0.52569443f;
	      sa[779] = 0.4997101f;
	      sa[780] = -0.1539057f;
	      sa[781] = 0.4972082f;
	      sa[782] = -0.11521762f;
	      sa[783] = 0.08440445f;
	      sa[784] = -0.22653382f;
	      sa[785] = -0.605235f;
	      sa[786] = 0.003476764f;
	      sa[787] = -0.54854196f;
	      sa[788] = -0.20672621f;
	      sa[789] = -0.4547108f;
	      sa[790] = 0.20294738f;
	      sa[791] = 0.039035127f;
	      sa[792] = 0.17112999f;
	      sa[793] = 0.104389414f;
	      sa[794] = -0.28237662f;
	      sa[795] = -0.6502495f;
	      sa[796] = 0.3458501f;
	      sa[797] = 0.057466883f;
	      sa[798] = -0.45693734f;
	      sa[799] = 0.021551551f;
	      sa[800] = 0.11438552f;
	      sa[801] = -0.34397787f;
	      sa[802] = -0.51805824f;
	      sa[803] = -0.723391f;
	      sa[804] = 0.53494006f;
	      sa[805] = 0.16739231f;
	      sa[806] = 0.054427344f;
	      sa[807] = -0.1772348f;
	      sa[808] = 0.73213005f;
	      sa[809] = -0.3724841f;
	      sa[810] = -0.6349255f;
	      sa[811] = 0.51354f;
	      sa[812] = 0.65467536f;
	      sa[813] = 0.11844659f;
	      sa[814] = -0.37248936f;
	      sa[815] = -0.23463926f;
	      sa[816] = 0.20955934f;
	      sa[817] = 0.3028185f;
	      sa[818] = 0.19184342f;
	      sa[819] = -0.045024533f;
	      sa[820] = 0.21607578f;
	      sa[821] = -0.3362574f;
	      sa[822] = 0.22391994f;
	      sa[823] = 0.17650187f;
	      sa[824] = -0.54584974f;
	      sa[825] = 0.25675273f;
	      sa[826] = 0.106516905f;
	      sa[827] = -0.115758575f;
	      sa[828] = 0.42256635f;
	      sa[829] = -0.73689324f;
	      sa[830] = 0.019697193f;
	      sa[831] = 0.093138486f;
	      sa[832] = -0.8946177f;
	      sa[833] = 0.32769895f;
	      sa[834] = 0.1998406f;
	      sa[835] = -0.054637775f;
	      sa[836] = 0.22728515f;
	      sa[837] = -0.15471788f;
	      sa[838] = -0.17013425f;
	      sa[839] = -0.38852763f;
	      sa[840] = -0.6272139f;
	      sa[841] = 0.08190005f;
	      sa[842] = 0.24884664f;
	      sa[843] = 0.08444592f;
	      sa[844] = -0.21184786f;
	      sa[845] = -0.0695438f;
	      sa[846] = -0.23763362f;
	      sa[847] = -0.19777983f;
	      sa[848] = 0.1959303f;
	      sa[849] = 0.038022716f;
	      sa[850] = -0.22696505f;
	      sa[851] = -0.45007434f;
	      sa[852] = 0.39067382f;
	      sa[853] = 0.27468112f;
	      sa[854] = 0.24305601f;
	      sa[855] = -0.17926738f;
	      sa[856] = -0.46344545f;
	      sa[857] = -0.10251624f;
	      sa[858] = -0.023825927f;
	      sa[859] = 0.088443935f;
	    }
	  }
	}
	// Neuron weights connecting Tanh and Tanh layer
	class DeepLearning_model_R_1481832873762_1608_Weight_3 implements java.io.Serializable {
	  public static final float[] VALUES = new float[100];
	  static {
	    DeepLearning_model_R_1481832873762_1608_Weight_3_0.fill(VALUES);
	  }
	  static final class DeepLearning_model_R_1481832873762_1608_Weight_3_0 implements java.io.Serializable {
	    static final void fill(float[] sa) {
	      sa[0] = -0.72138083f;
	      sa[1] = -0.19362098f;
	      sa[2] = -0.050561737f;
	      sa[3] = 0.039795183f;
	      sa[4] = 0.66123813f;
	      sa[5] = 0.09122427f;
	      sa[6] = 0.08581464f;
	      sa[7] = -0.90764725f;
	      sa[8] = 0.7918758f;
	      sa[9] = 0.0044808364f;
	      sa[10] = 0.56058747f;
	      sa[11] = 0.7086437f;
	      sa[12] = 0.45810184f;
	      sa[13] = 0.27584437f;
	      sa[14] = -0.3880008f;
	      sa[15] = 0.0240546f;
	      sa[16] = 0.13099344f;
	      sa[17] = 0.08536772f;
	      sa[18] = -0.22969104f;
	      sa[19] = -0.43788534f;
	      sa[20] = -0.07628825f;
	      sa[21] = 0.08871911f;
	      sa[22] = -0.48347747f;
	      sa[23] = -0.015511201f;
	      sa[24] = -0.14874461f;
	      sa[25] = -0.236977f;
	      sa[26] = -0.37039658f;
	      sa[27] = -0.10991412f;
	      sa[28] = -0.12647416f;
	      sa[29] = 0.3246575f;
	      sa[30] = -0.3022025f;
	      sa[31] = 0.39351222f;
	      sa[32] = -0.48890796f;
	      sa[33] = 0.081737496f;
	      sa[34] = -0.38298893f;
	      sa[35] = -0.24542178f;
	      sa[36] = 0.5079389f;
	      sa[37] = 0.38023645f;
	      sa[38] = 0.057388663f;
	      sa[39] = 0.06266785f;
	      sa[40] = 0.43900988f;
	      sa[41] = -0.024383485f;
	      sa[42] = -0.11601374f;
	      sa[43] = 0.14552839f;
	      sa[44] = -0.0743615f;
	      sa[45] = -0.39761135f;
	      sa[46] = -0.115532406f;
	      sa[47] = 0.44829598f;
	      sa[48] = -0.027068064f;
	      sa[49] = -0.11453218f;
	      sa[50] = 0.67907345f;
	      sa[51] = 0.2857268f;
	      sa[52] = -0.45121565f;
	      sa[53] = 0.12980303f;
	      sa[54] = -0.66028386f;
	      sa[55] = -0.3134373f;
	      sa[56] = -0.007830909f;
	      sa[57] = -0.37275377f;
	      sa[58] = -0.37867492f;
	      sa[59] = -0.13449344f;
	      sa[60] = -0.38768813f;
	      sa[61] = -0.3539935f;
	      sa[62] = -0.27980646f;
	      sa[63] = 0.4214781f;
	      sa[64] = -0.12184719f;
	      sa[65] = 0.7453944f;
	      sa[66] = -0.16694051f;
	      sa[67] = 0.76666605f;
	      sa[68] = 0.3706106f;
	      sa[69] = -0.16074531f;
	      sa[70] = -0.30340314f;
	      sa[71] = 0.2879832f;
	      sa[72] = -0.130928f;
	      sa[73] = 0.3643034f;
	      sa[74] = 0.5169484f;
	      sa[75] = 0.2739532f;
	      sa[76] = 0.2002998f;
	      sa[77] = 0.069072746f;
	      sa[78] = -0.08921118f;
	      sa[79] = 0.07329336f;
	      sa[80] = -0.5917218f;
	      sa[81] = 0.4621068f;
	      sa[82] = 0.6277272f;
	      sa[83] = -0.07474658f;
	      sa[84] = -0.010027037f;
	      sa[85] = 0.28276092f;
	      sa[86] = 0.16376176f;
	      sa[87] = -0.3959462f;
	      sa[88] = 0.5908745f;
	      sa[89] = 0.013258683f;
	      sa[90] = 0.32092598f;
	      sa[91] = -0.47402835f;
	      sa[92] = 0.5621968f;
	      sa[93] = 0.4439685f;
	      sa[94] = -0.31981885f;
	      sa[95] = 0.5000019f;
	      sa[96] = -0.017345404f;
	      sa[97] = -0.25026345f;
	      sa[98] = -0.065285005f;
	      sa[99] = 0.23235214f;
	    }
	  }
	}
	// Neuron weights connecting Tanh and Tanh layer
	class DeepLearning_model_R_1481832873762_1608_Weight_4 implements java.io.Serializable {
	  public static final float[] VALUES = new float[10];
	  static {
	    DeepLearning_model_R_1481832873762_1608_Weight_4_0.fill(VALUES);
	  }
	  static final class DeepLearning_model_R_1481832873762_1608_Weight_4_0 implements java.io.Serializable {
	    static final void fill(float[] sa) {
	      sa[0] = -0.2980442f;
	      sa[1] = 0.24276355f;
	      sa[2] = -0.45128745f;
	      sa[3] = 0.7913649f;
	      sa[4] = -0.9230387f;
	      sa[5] = -0.3161578f;
	      sa[6] = -0.690762f;
	      sa[7] = 0.72222155f;
	      sa[8] = 0.35384348f;
	      sa[9] = -0.4600298f;
	    }
	  }
	}
	// Neuron weights connecting Tanh and Tanh layer
	class DeepLearning_model_R_1481832873762_1608_Weight_5 implements java.io.Serializable {
	  public static final float[] VALUES = new float[10];
	  static {
	    DeepLearning_model_R_1481832873762_1608_Weight_5_0.fill(VALUES);
	  }
	  static final class DeepLearning_model_R_1481832873762_1608_Weight_5_0 implements java.io.Serializable {
	    static final void fill(float[] sa) {
	      sa[0] = -1.0752425f;
	      sa[1] = 0.5092157f;
	      sa[2] = 2.2578359f;
	      sa[3] = 2.69771f;
	      sa[4] = 1.3334596f;
	      sa[5] = -2.0937767f;
	      sa[6] = -1.1095896f;
	      sa[7] = -0.36474502f;
	      sa[8] = 0.59292305f;
	      sa[9] = 0.83453655f;
	    }
	  }
	}
	// Neuron weights connecting Tanh and Tanh layer
	class DeepLearning_model_R_1481832873762_1608_Weight_6 implements java.io.Serializable {
	  public static final float[] VALUES = new float[100];
	  static {
	    DeepLearning_model_R_1481832873762_1608_Weight_6_0.fill(VALUES);
	  }
	  static final class DeepLearning_model_R_1481832873762_1608_Weight_6_0 implements java.io.Serializable {
	    static final void fill(float[] sa) {
	      sa[0] = 0.57769716f;
	      sa[1] = 0.07087386f;
	      sa[2] = 0.47354275f;
	      sa[3] = 0.12919764f;
	      sa[4] = 0.23568344f;
	      sa[5] = -0.45178908f;
	      sa[6] = 0.86186004f;
	      sa[7] = 0.41415197f;
	      sa[8] = 0.17113991f;
	      sa[9] = -1.6148006f;
	      sa[10] = 0.69216233f;
	      sa[11] = 0.20765427f;
	      sa[12] = -2.5724244f;
	      sa[13] = -0.06680992f;
	      sa[14] = 1.0924269f;
	      sa[15] = 0.27668607f;
	      sa[16] = 0.6870497f;
	      sa[17] = 0.9504381f;
	      sa[18] = 1.0942687f;
	      sa[19] = 0.18464634f;
	      sa[20] = 0.44729307f;
	      sa[21] = 0.49899662f;
	      sa[22] = -0.23295984f;
	      sa[23] = 0.86591154f;
	      sa[24] = -0.8630817f;
	      sa[25] = -0.7770842f;
	      sa[26] = 0.45812005f;
	      sa[27] = -0.51106167f;
	      sa[28] = -0.75768816f;
	      sa[29] = 0.7797972f;
	      sa[30] = 0.030338477f;
	      sa[31] = 0.11675638f;
	      sa[32] = 1.3978082f;
	      sa[33] = -0.463293f;
	      sa[34] = 0.0048683663f;
	      sa[35] = -0.5665336f;
	      sa[36] = -1.012252f;
	      sa[37] = -1.1247333f;
	      sa[38] = -0.29427058f;
	      sa[39] = 0.28750563f;
	      sa[40] = 0.25772208f;
	      sa[41] = -0.6629416f;
	      sa[42] = 0.2239983f;
	      sa[43] = -0.37143153f;
	      sa[44] = 1.2171345f;
	      sa[45] = 0.036885798f;
	      sa[46] = 0.6326259f;
	      sa[47] = 0.23274072f;
	      sa[48] = -0.4733538f;
	      sa[49] = 0.723399f;
	      sa[50] = 0.22817366f;
	      sa[51] = -0.0055893967f;
	      sa[52] = 0.2765578f;
	      sa[53] = 0.32885262f;
	      sa[54] = -1.0672747f;
	      sa[55] = -0.25747058f;
	      sa[56] = 0.68439937f;
	      sa[57] = 0.3244792f;
	      sa[58] = 0.88343513f;
	      sa[59] = -1.1772469f;
	      sa[60] = 0.96030676f;
	      sa[61] = 0.45804235f;
	      sa[62] = -2.9254882f;
	      sa[63] = 0.29827678f;
	      sa[64] = 0.25681463f;
	      sa[65] = 0.037846934f;
	      sa[66] = -0.33610678f;
	      sa[67] = 0.3037144f;
	      sa[68] = -0.5104148f;
	      sa[69] = -0.04394511f;
	      sa[70] = -0.67939264f;
	      sa[71] = -1.0977194f;
	      sa[72] = -0.6535359f;
	      sa[73] = -0.8361631f;
	      sa[74] = 0.71872526f;
	      sa[75] = 0.71080256f;
	      sa[76] = 0.0031176666f;
	      sa[77] = -0.13078132f;
	      sa[78] = -0.12937118f;
	      sa[79] = -0.058924276f;
	      sa[80] = 0.80972284f;
	      sa[81] = 0.5173762f;
	      sa[82] = 0.3315461f;
	      sa[83] = 0.45089182f;
	      sa[84] = -1.0866277f;
	      sa[85] = -2.7847688f;
	      sa[86] = -0.6194565f;
	      sa[87] = 1.0925206f;
	      sa[88] = -0.13932917f;
	      sa[89] = -0.69589293f;
	      sa[90] = 0.25702408f;
	      sa[91] = -1.9630378f;
	      sa[92] = 0.97621286f;
	      sa[93] = 1.1122606f;
	      sa[94] = -1.6770973f;
	      sa[95] = 2.0971465f;
	      sa[96] = -0.62185884f;
	      sa[97] = 0.3260256f;
	      sa[98] = 1.1346847f;
	      sa[99] = -0.7445244f;
	    }
	  }
	}
	// Neuron weights connecting Tanh and Tanh layer
	class DeepLearning_model_R_1481832873762_1608_Weight_7 implements java.io.Serializable {
	  public static final float[] VALUES = new float[860];
	  static {
	    DeepLearning_model_R_1481832873762_1608_Weight_7_0.fill(VALUES);
	  }
	  static final class DeepLearning_model_R_1481832873762_1608_Weight_7_0 implements java.io.Serializable {
	    static final void fill(float[] sa) {
	      sa[0] = 0.463248f;
	      sa[1] = 0.18810569f;
	      sa[2] = 0.042570863f;
	      sa[3] = -0.09841256f;
	      sa[4] = -0.06651849f;
	      sa[5] = 0.009858516f;
	      sa[6] = 0.035577018f;
	      sa[7] = 0.055861745f;
	      sa[8] = -0.27300704f;
	      sa[9] = 0.019409074f;
	      sa[10] = 0.049784437f;
	      sa[11] = -0.33281434f;
	      sa[12] = -0.020588312f;
	      sa[13] = -0.0703332f;
	      sa[14] = 0.18741179f;
	      sa[15] = -0.0059170965f;
	      sa[16] = 0.31145012f;
	      sa[17] = 0.028927943f;
	      sa[18] = -2.0704172E-4f;
	      sa[19] = -0.072157145f;
	      sa[20] = -0.3950044f;
	      sa[21] = -0.504708f;
	      sa[22] = -0.27677506f;
	      sa[23] = -1.148101f;
	      sa[24] = -0.703925f;
	      sa[25] = 0.23968334f;
	      sa[26] = -0.35913053f;
	      sa[27] = 1.2180585f;
	      sa[28] = 0.3340236f;
	      sa[29] = 0.04310124f;
	      sa[30] = -0.5349891f;
	      sa[31] = -1.1951791f;
	      sa[32] = 0.39619014f;
	      sa[33] = -0.0077065644f;
	      sa[34] = 1.0473505f;
	      sa[35] = -0.32974917f;
	      sa[36] = -0.3470622f;
	      sa[37] = -0.24354355f;
	      sa[38] = 0.053011503f;
	      sa[39] = 0.45856342f;
	      sa[40] = 0.28275242f;
	      sa[41] = 0.38882542f;
	      sa[42] = 0.44143826f;
	      sa[43] = 0.11819934f;
	      sa[44] = 0.24785145f;
	      sa[45] = 0.37029248f;
	      sa[46] = -0.14057982f;
	      sa[47] = -0.17657644f;
	      sa[48] = -0.28576946f;
	      sa[49] = 0.47267815f;
	      sa[50] = -0.79388607f;
	      sa[51] = -0.1126343f;
	      sa[52] = 0.4377678f;
	      sa[53] = -0.07485081f;
	      sa[54] = 0.38367793f;
	      sa[55] = -0.05005759f;
	      sa[56] = -0.54003257f;
	      sa[57] = -0.13691267f;
	      sa[58] = -0.16438542f;
	      sa[59] = -0.043480318f;
	      sa[60] = -0.15185207f;
	      sa[61] = -0.081509076f;
	      sa[62] = -0.023591641f;
	      sa[63] = -0.05316472f;
	      sa[64] = 0.21763389f;
	      sa[65] = -0.025533684f;
	      sa[66] = 0.06449998f;
	      sa[67] = -0.039271373f;
	      sa[68] = 0.2703847f;
	      sa[69] = 0.059567444f;
	      sa[70] = 0.14263582f;
	      sa[71] = -0.06225032f;
	      sa[72] = 0.04414985f;
	      sa[73] = -0.10311003f;
	      sa[74] = -0.22809482f;
	      sa[75] = -0.15906708f;
	      sa[76] = -0.27581954f;
	      sa[77] = 0.030001178f;
	      sa[78] = 0.060092352f;
	      sa[79] = 0.03264352f;
	      sa[80] = 0.3906811f;
	      sa[81] = -0.19065402f;
	      sa[82] = 0.013779971f;
	      sa[83] = -0.016485436f;
	      sa[84] = 0.09758374f;
	      sa[85] = 0.0289395f;
	      sa[86] = 0.19150913f;
	      sa[87] = 0.12570946f;
	      sa[88] = -0.37650755f;
	      sa[89] = -0.10709361f;
	      sa[90] = -0.2459877f;
	      sa[91] = 0.03896547f;
	      sa[92] = -8.394257E-4f;
	      sa[93] = 0.15580502f;
	      sa[94] = -0.07518715f;
	      sa[95] = 0.30189174f;
	      sa[96] = -0.29928112f;
	      sa[97] = 0.097651884f;
	      sa[98] = 0.050756518f;
	      sa[99] = -0.020312801f;
	      sa[100] = -0.056230463f;
	      sa[101] = 0.35259852f;
	      sa[102] = -0.7730921f;
	      sa[103] = 0.50451523f;
	      sa[104] = -0.21379463f;
	      sa[105] = -0.27346596f;
	      sa[106] = -0.16839713f;
	      sa[107] = 0.016659228f;
	      sa[108] = 0.13101643f;
	      sa[109] = 0.12220667f;
	      sa[110] = 0.31626162f;
	      sa[111] = 0.49262205f;
	      sa[112] = -0.19708823f;
	      sa[113] = 0.5956557f;
	      sa[114] = -0.50283694f;
	      sa[115] = -0.025320938f;
	      sa[116] = 0.5080859f;
	      sa[117] = 0.055097498f;
	      sa[118] = 0.39639404f;
	      sa[119] = 0.3626364f;
	      sa[120] = 0.15315683f;
	      sa[121] = 0.7207222f;
	      sa[122] = 0.8328997f;
	      sa[123] = 0.5857772f;
	      sa[124] = 0.692659f;
	      sa[125] = 0.031424604f;
	      sa[126] = -0.65936756f;
	      sa[127] = -0.2459219f;
	      sa[128] = -0.7410348f;
	      sa[129] = -0.043613777f;
	      sa[130] = -0.023740962f;
	      sa[131] = 0.3334301f;
	      sa[132] = 0.5356442f;
	      sa[133] = -0.17171602f;
	      sa[134] = -0.31330964f;
	      sa[135] = 0.17412898f;
	      sa[136] = 0.69818676f;
	      sa[137] = -0.6347969f;
	      sa[138] = 0.5131811f;
	      sa[139] = 0.25783843f;
	      sa[140] = -0.20002344f;
	      sa[141] = -0.053284336f;
	      sa[142] = -2.2972554E-4f;
	      sa[143] = 0.030678885f;
	      sa[144] = -0.060966816f;
	      sa[145] = 0.08607591f;
	      sa[146] = -0.09413971f;
	      sa[147] = -0.11453601f;
	      sa[148] = 0.24985828f;
	      sa[149] = 0.0020756184f;
	      sa[150] = 0.26218665f;
	      sa[151] = 0.23403543f;
	      sa[152] = 0.012213952f;
	      sa[153] = -0.0818585f;
	      sa[154] = -0.04155048f;
	      sa[155] = 0.20603f;
	      sa[156] = -0.2612396f;
	      sa[157] = 0.011655073f;
	      sa[158] = -0.0012372842f;
	      sa[159] = 0.030145796f;
	      sa[160] = -0.35876638f;
	      sa[161] = -0.013861638f;
	      sa[162] = 0.2506521f;
	      sa[163] = 0.053226657f;
	      sa[164] = -0.0011044681f;
	      sa[165] = 0.057296656f;
	      sa[166] = 0.2777726f;
	      sa[167] = -0.06451306f;
	      sa[168] = 0.6256373f;
	      sa[169] = -0.6520576f;
	      sa[170] = 0.32056287f;
	      sa[171] = 0.39204746f;
	      sa[172] = 0.032725517f;
	      sa[173] = 0.28133485f;
	      sa[174] = -0.45868114f;
	      sa[175] = -0.05771953f;
	      sa[176] = 0.55695057f;
	      sa[177] = 0.21942927f;
	      sa[178] = 0.22990407f;
	      sa[179] = 1.0240417f;
	      sa[180] = 0.091090634f;
	      sa[181] = -0.7868008f;
	      sa[182] = -0.13245267f;
	      sa[183] = -0.002185796f;
	      sa[184] = 0.54074746f;
	      sa[185] = -0.069401726f;
	      sa[186] = -0.5546983f;
	      sa[187] = -0.027386403f;
	      sa[188] = -0.15471295f;
	      sa[189] = 0.27256873f;
	      sa[190] = 0.06007056f;
	      sa[191] = -0.31048584f;
	      sa[192] = -0.75276244f;
	      sa[193] = 0.15239221f;
	      sa[194] = 0.004665671f;
	      sa[195] = -0.0030073493f;
	      sa[196] = -0.26826623f;
	      sa[197] = 0.07700382f;
	      sa[198] = 0.03701973f;
	      sa[199] = 0.0038913467f;
	      sa[200] = -0.13237536f;
	      sa[201] = 0.4501721f;
	      sa[202] = 0.430403f;
	      sa[203] = -0.11525243f;
	      sa[204] = 0.49619824f;
	      sa[205] = -0.028898202f;
	      sa[206] = -0.19318454f;
	      sa[207] = -0.037152003f;
	      sa[208] = -0.37237096f;
	      sa[209] = 0.30242327f;
	      sa[210] = 0.111502126f;
	      sa[211] = -0.007203922f;
	      sa[212] = -0.60108095f;
	      sa[213] = 0.28583962f;
	      sa[214] = 0.33277518f;
	      sa[215] = 0.00600297f;
	      sa[216] = 0.2065287f;
	      sa[217] = 0.22189271f;
	      sa[218] = 0.4448219f;
	      sa[219] = 0.18783836f;
	      sa[220] = 0.34816563f;
	      sa[221] = -1.6449618f;
	      sa[222] = -0.053401265f;
	      sa[223] = 0.47221816f;
	      sa[224] = -0.1076426f;
	      sa[225] = -0.80239624f;
	      sa[226] = -0.66777325f;
	      sa[227] = 0.58896625f;
	      sa[228] = 0.8486851f;
	      sa[229] = -0.5922496f;
	      sa[230] = 0.021585695f;
	      sa[231] = -0.008678033f;
	      sa[232] = -0.79370576f;
	      sa[233] = -0.05514125f;
	      sa[234] = 0.20587319f;
	      sa[235] = 0.5535847f;
	      sa[236] = 0.0061619426f;
	      sa[237] = -0.3451097f;
	      sa[238] = 0.2983858f;
	      sa[239] = 0.36607048f;
	      sa[240] = 0.10905071f;
	      sa[241] = 1.1722273f;
	      sa[242] = -0.27254713f;
	      sa[243] = -0.17899756f;
	      sa[244] = -0.05670979f;
	      sa[245] = 0.6149117f;
	      sa[246] = 0.390226f;
	      sa[247] = -0.7227077f;
	      sa[248] = -0.52821946f;
	      sa[249] = 0.9841369f;
	      sa[250] = -0.6553389f;
	      sa[251] = -0.2977356f;
	      sa[252] = -0.19356585f;
	      sa[253] = -0.13369523f;
	      sa[254] = -0.059329137f;
	      sa[255] = -0.66899496f;
	      sa[256] = -0.52227855f;
	      sa[257] = 0.28213328f;
	      sa[258] = -0.15302028f;
	      sa[259] = -1.3175306f;
	      sa[260] = 0.31669286f;
	      sa[261] = 1.0394666f;
	      sa[262] = 0.37870485f;
	      sa[263] = 0.5901455f;
	      sa[264] = 1.4300462f;
	      sa[265] = -0.21457225f;
	      sa[266] = -0.008724139f;
	      sa[267] = -0.8786805f;
	      sa[268] = -0.67948544f;
	      sa[269] = 0.02243876f;
	      sa[270] = 0.33166477f;
	      sa[271] = 0.6177116f;
	      sa[272] = 0.05367988f;
	      sa[273] = -0.18546379f;
	      sa[274] = -1.2584891f;
	      sa[275] = 0.06871783f;
	      sa[276] = 0.7158131f;
	      sa[277] = 0.12114629f;
	      sa[278] = -0.71356624f;
	      sa[279] = -0.60346556f;
	      sa[280] = 0.412989f;
	      sa[281] = -0.43443325f;
	      sa[282] = -0.2107477f;
	      sa[283] = 0.6399977f;
	      sa[284] = 0.49564195f;
	      sa[285] = -0.603275f;
	      sa[286] = -0.2597958f;
	      sa[287] = -1.1206759f;
	      sa[288] = -0.31311604f;
	      sa[289] = -0.41592157f;
	      sa[290] = 0.5149485f;
	      sa[291] = 0.29028234f;
	      sa[292] = 0.092585415f;
	      sa[293] = -0.13357984f;
	      sa[294] = -0.92764527f;
	      sa[295] = 0.40934885f;
	      sa[296] = 1.7256566f;
	      sa[297] = 0.14963816f;
	      sa[298] = 0.057243306f;
	      sa[299] = 0.5415095f;
	      sa[300] = 0.79423213f;
	      sa[301] = 0.15221277f;
	      sa[302] = 0.1568813f;
	      sa[303] = 0.54058236f;
	      sa[304] = -0.22333395f;
	      sa[305] = 0.078520134f;
	      sa[306] = 0.4030981f;
	      sa[307] = -1.2430807f;
	      sa[308] = 0.32535848f;
	      sa[309] = 0.5616328f;
	      sa[310] = -0.41308168f;
	      sa[311] = -0.42996117f;
	      sa[312] = -0.15625268f;
	      sa[313] = 0.34305575f;
	      sa[314] = -0.48993367f;
	      sa[315] = -0.1448068f;
	      sa[316] = 0.37761977f;
	      sa[317] = 1.2417417f;
	      sa[318] = -0.17109674f;
	      sa[319] = 0.9814439f;
	      sa[320] = 0.017373811f;
	      sa[321] = -0.73633265f;
	      sa[322] = 0.66131866f;
	      sa[323] = -0.26030517f;
	      sa[324] = -0.22794369f;
	      sa[325] = 0.033662092f;
	      sa[326] = 0.29144955f;
	      sa[327] = 0.5011402f;
	      sa[328] = -0.15751755f;
	      sa[329] = 0.3483186f;
	      sa[330] = -0.7578233f;
	      sa[331] = -0.41099334f;
	      sa[332] = 0.5041415f;
	      sa[333] = -0.18779898f;
	      sa[334] = 0.03651254f;
	      sa[335] = -0.29036874f;
	      sa[336] = -0.591389f;
	      sa[337] = -0.026569953f;
	      sa[338] = -0.35732993f;
	      sa[339] = 0.321043f;
	      sa[340] = -0.12131493f;
	      sa[341] = 0.2531043f;
	      sa[342] = -0.018904496f;
	      sa[343] = 0.16415878f;
	      sa[344] = -0.14425768f;
	      sa[345] = -0.14869663f;
	      sa[346] = 0.10301614f;
	      sa[347] = 0.3408164f;
	      sa[348] = 0.13995507f;
	      sa[349] = 0.085552126f;
	      sa[350] = -0.19711185f;
	      sa[351] = 0.057638884f;
	      sa[352] = 0.013239601f;
	      sa[353] = -0.17235886f;
	      sa[354] = -0.06882176f;
	      sa[355] = 0.20261805f;
	      sa[356] = -0.015337902f;
	      sa[357] = -0.021073593f;
	      sa[358] = 0.019977963f;
	      sa[359] = 0.015766077f;
	      sa[360] = 0.3892369f;
	      sa[361] = -0.6312658f;
	      sa[362] = 0.41437525f;
	      sa[363] = 0.17055498f;
	      sa[364] = -0.57136446f;
	      sa[365] = -0.31700608f;
	      sa[366] = 0.5315047f;
	      sa[367] = 0.20515299f;
	      sa[368] = 0.540159f;
	      sa[369] = -0.3411094f;
	      sa[370] = 0.09027623f;
	      sa[371] = 0.0013953061f;
	      sa[372] = -0.002738559f;
	      sa[373] = 0.36366063f;
	      sa[374] = 0.1041844f;
	      sa[375] = -0.29389092f;
	      sa[376] = -0.5151184f;
	      sa[377] = 0.35285893f;
	      sa[378] = 0.0841364f;
	      sa[379] = 0.5567127f;
	      sa[380] = -0.0792391f;
	      sa[381] = -0.038628757f;
	      sa[382] = 0.05402881f;
	      sa[383] = -0.07001921f;
	      sa[384] = 0.20800798f;
	      sa[385] = -0.048738196f;
	      sa[386] = 0.24070774f;
	      sa[387] = 0.13192333f;
	      sa[388] = -0.05636096f;
	      sa[389] = -0.0653481f;
	      sa[390] = -0.18250075f;
	      sa[391] = -0.16065964f;
	      sa[392] = -0.0457259f;
	      sa[393] = 0.03208215f;
	      sa[394] = -0.29686058f;
	      sa[395] = 0.23640577f;
	      sa[396] = -0.28487098f;
	      sa[397] = 0.123529956f;
	      sa[398] = 0.055221763f;
	      sa[399] = 0.028687315f;
	      sa[400] = -0.3167733f;
	      sa[401] = -0.24838792f;
	      sa[402] = -0.74446523f;
	      sa[403] = -0.48265284f;
	      sa[404] = -0.3911289f;
	      sa[405] = 0.29087418f;
	      sa[406] = -0.30768016f;
	      sa[407] = 0.5397165f;
	      sa[408] = -0.3212408f;
	      sa[409] = 0.29593956f;
	      sa[410] = -0.050095722f;
	      sa[411] = -0.16065942f;
	      sa[412] = -0.43398333f;
	      sa[413] = -0.22643691f;
	      sa[414] = 0.44297746f;
	      sa[415] = 0.16097325f;
	      sa[416] = -0.056458358f;
	      sa[417] = 0.42571905f;
	      sa[418] = 0.44210842f;
	      sa[419] = 0.13486822f;
	      sa[420] = -0.08153842f;
	      sa[421] = -0.5340467f;
	      sa[422] = -0.64937377f;
	      sa[423] = -0.30575892f;
	      sa[424] = -0.250982f;
	      sa[425] = 0.02503308f;
	      sa[426] = -0.47046953f;
	      sa[427] = 0.15988278f;
	      sa[428] = 0.86249286f;
	      sa[429] = -0.14738975f;
	      sa[430] = -0.055799536f;
	      sa[431] = -0.64041567f;
	      sa[432] = -0.6046333f;
	      sa[433] = 0.5019969f;
	      sa[434] = 0.6665571f;
	      sa[435] = -0.018190343f;
	      sa[436] = -0.87579757f;
	      sa[437] = 0.5372292f;
	      sa[438] = -0.14270096f;
	      sa[439] = -0.4595139f;
	      sa[440] = -0.055308904f;
	      sa[441] = -0.32962763f;
	      sa[442] = 0.29013145f;
	      sa[443] = 0.08267717f;
	      sa[444] = 0.2227066f;
	      sa[445] = -0.22626254f;
	      sa[446] = 0.47880262f;
	      sa[447] = -0.3095282f;
	      sa[448] = -0.10155591f;
	      sa[449] = -0.2393906f;
	      sa[450] = -0.11039101f;
	      sa[451] = -0.36983684f;
	      sa[452] = 0.4317701f;
	      sa[453] = -0.07993012f;
	      sa[454] = -0.38438153f;
	      sa[455] = -0.33820188f;
	      sa[456] = -0.3513206f;
	      sa[457] = 0.48629254f;
	      sa[458] = 0.2531536f;
	      sa[459] = -0.03816181f;
	      sa[460] = 0.40948656f;
	      sa[461] = 0.42646492f;
	      sa[462] = 0.39255846f;
	      sa[463] = 1.0015415f;
	      sa[464] = 0.46445283f;
	      sa[465] = -0.09616156f;
	      sa[466] = 0.053094175f;
	      sa[467] = -0.7095279f;
	      sa[468] = -1.1341414f;
	      sa[469] = 0.14127669f;
	      sa[470] = 0.45696265f;
	      sa[471] = 0.43418294f;
	      sa[472] = 0.41508162f;
	      sa[473] = 0.2166295f;
	      sa[474] = -1.0278441f;
	      sa[475] = 0.20780195f;
	      sa[476] = 0.73504776f;
	      sa[477] = -0.033988222f;
	      sa[478] = -0.41944024f;
	      sa[479] = 0.46035346f;
	      sa[480] = 0.17330757f;
	      sa[481] = 0.14312077f;
	      sa[482] = 0.049083922f;
	      sa[483] = -0.05503056f;
	      sa[484] = -0.2484741f;
	      sa[485] = 0.13762693f;
	      sa[486] = -0.16893557f;
	      sa[487] = -0.096417665f;
	      sa[488] = -0.1150981f;
	      sa[489] = -0.27449065f;
	      sa[490] = 0.13353886f;
	      sa[491] = -0.21049617f;
	      sa[492] = 0.038721707f;
	      sa[493] = 0.3265431f;
	      sa[494] = -0.23876946f;
	      sa[495] = 0.31328547f;
	      sa[496] = -0.11999122f;
	      sa[497] = 0.017123839f;
	      sa[498] = 0.03411688f;
	      sa[499] = -0.07166683f;
	      sa[500] = 0.4192181f;
	      sa[501] = -0.47649723f;
	      sa[502] = -0.042233996f;
	      sa[503] = 0.31299886f;
	      sa[504] = 0.37224233f;
	      sa[505] = 0.052902285f;
	      sa[506] = -0.07732419f;
	      sa[507] = -0.50185376f;
	      sa[508] = 0.20443821f;
	      sa[509] = 0.6861236f;
	      sa[510] = -0.2864403f;
	      sa[511] = -0.5362828f;
	      sa[512] = 0.023454461f;
	      sa[513] = 0.0055590947f;
	      sa[514] = -0.86434734f;
	      sa[515] = 0.15214628f;
	      sa[516] = 0.58242494f;
	      sa[517] = 0.5907051f;
	      sa[518] = 0.075158395f;
	      sa[519] = -0.28188655f;
	      sa[520] = -0.12832277f;
	      sa[521] = 0.54177064f;
	      sa[522] = 0.23706158f;
	      sa[523] = -0.16056368f;
	      sa[524] = -0.35181463f;
	      sa[525] = -0.22210804f;
	      sa[526] = 0.7460705f;
	      sa[527] = -0.1742115f;
	      sa[528] = -0.3791847f;
	      sa[529] = -0.30718267f;
	      sa[530] = 0.075794086f;
	      sa[531] = -0.10382686f;
	      sa[532] = 0.48566842f;
	      sa[533] = 0.0028607897f;
	      sa[534] = -0.085389264f;
	      sa[535] = 0.0385457f;
	      sa[536] = -0.2312978f;
	      sa[537] = 0.1484411f;
	      sa[538] = -0.4798253f;
	      sa[539] = 0.3502339f;
	      sa[540] = -0.9923286f;
	      sa[541] = -0.33188704f;
	      sa[542] = -0.82582134f;
	      sa[543] = -0.7616377f;
	      sa[544] = -0.3305027f;
	      sa[545] = -0.53818035f;
	      sa[546] = -0.059112307f;
	      sa[547] = 0.4980994f;
	      sa[548] = -0.06203253f;
	      sa[549] = -0.6739528f;
	      sa[550] = 0.64333624f;
	      sa[551] = 0.15702453f;
	      sa[552] = 0.3812749f;
	      sa[553] = 0.5028635f;
	      sa[554] = 0.3633407f;
	      sa[555] = 0.38312668f;
	      sa[556] = 0.46945208f;
	      sa[557] = 1.557303f;
	      sa[558] = -0.19097832f;
	      sa[559] = 8.517412E-5f;
	      sa[560] = -0.12907793f;
	      sa[561] = 0.13243262f;
	      sa[562] = 0.57470965f;
	      sa[563] = -0.47881803f;
	      sa[564] = 0.60446274f;
	      sa[565] = 0.44587946f;
	      sa[566] = -0.40246192f;
	      sa[567] = 0.3839611f;
	      sa[568] = -0.5004408f;
	      sa[569] = 0.26225203f;
	      sa[570] = -0.33610335f;
	      sa[571] = -0.2696248f;
	      sa[572] = 1.0248728f;
	      sa[573] = -0.4028775f;
	      sa[574] = 0.030778227f;
	      sa[575] = -0.082482845f;
	      sa[576] = -0.7154216f;
	      sa[577] = -0.3191739f;
	      sa[578] = -1.7596385f;
	      sa[579] = -0.6769138f;
	      sa[580] = -0.32499567f;
	      sa[581] = 0.18293479f;
	      sa[582] = 0.32134998f;
	      sa[583] = -0.19937155f;
	      sa[584] = -0.41935697f;
	      sa[585] = 0.35082608f;
	      sa[586] = -0.37029937f;
	      sa[587] = 0.67344207f;
	      sa[588] = 0.21400511f;
	      sa[589] = -0.08121629f;
	      sa[590] = -0.32970503f;
	      sa[591] = -0.4232341f;
	      sa[592] = -0.020216206f;
	      sa[593] = 0.01985352f;
	      sa[594] = 1.1782403f;
	      sa[595] = -0.07944617f;
	      sa[596] = -0.9932945f;
	      sa[597] = -0.0050160387f;
	      sa[598] = 0.15813953f;
	      sa[599] = -0.75218886f;
	      sa[600] = -0.10526699f;
	      sa[601] = 0.15183802f;
	      sa[602] = 0.02460778f;
	      sa[603] = 0.1224759f;
	      sa[604] = 0.03024216f;
	      sa[605] = 0.16050959f;
	      sa[606] = 0.0116375005f;
	      sa[607] = 0.08648764f;
	      sa[608] = 0.062864915f;
	      sa[609] = -0.021642037f;
	      sa[610] = 0.22822008f;
	      sa[611] = -0.29933956f;
	      sa[612] = -0.0020027035f;
	      sa[613] = 0.13585918f;
	      sa[614] = -0.017238868f;
	      sa[615] = 0.21922289f;
	      sa[616] = 0.18132809f;
	      sa[617] = 0.034345694f;
	      sa[618] = -0.009829132f;
	      sa[619] = -0.07327394f;
	      sa[620] = 0.28136435f;
	      sa[621] = 0.10333897f;
	      sa[622] = -0.74866605f;
	      sa[623] = 0.07588312f;
	      sa[624] = -0.08156196f;
	      sa[625] = 0.30481106f;
	      sa[626] = 0.8002033f;
	      sa[627] = -1.0064375f;
	      sa[628] = -0.27092054f;
	      sa[629] = 0.3633352f;
	      sa[630] = -0.14885144f;
	      sa[631] = 0.20859209f;
	      sa[632] = -0.22713976f;
	      sa[633] = 0.0658554f;
	      sa[634] = 0.073526785f;
	      sa[635] = -0.42333513f;
	      sa[636] = 0.0478294f;
	      sa[637] = -0.060325984f;
	      sa[638] = 0.13888845f;
	      sa[639] = -0.49813846f;
	      sa[640] = 0.26608935f;
	      sa[641] = 0.3761978f;
	      sa[642] = -0.19245088f;
	      sa[643] = -0.06614048f;
	      sa[644] = 0.33908284f;
	      sa[645] = 0.6486214f;
	      sa[646] = 0.20420428f;
	      sa[647] = -0.29227042f;
	      sa[648] = -0.25146762f;
	      sa[649] = 0.8205277f;
	      sa[650] = -0.27562279f;
	      sa[651] = -0.5889768f;
	      sa[652] = 0.66956836f;
	      sa[653] = 0.036132064f;
	      sa[654] = 0.36811072f;
	      sa[655] = -0.34891218f;
	      sa[656] = -0.21397784f;
	      sa[657] = 0.50029457f;
	      sa[658] = -1.4124596f;
	      sa[659] = -0.42918912f;
	      sa[660] = 0.0032008889f;
	      sa[661] = 0.40015706f;
	      sa[662] = -0.59365976f;
	      sa[663] = 0.55363786f;
	      sa[664] = 0.33387667f;
	      sa[665] = -0.34264025f;
	      sa[666] = -0.20607284f;
	      sa[667] = -0.7427289f;
	      sa[668] = -0.78517264f;
	      sa[669] = 0.19729507f;
	      sa[670] = 0.55726695f;
	      sa[671] = 1.0038629f;
	      sa[672] = 0.22272673f;
	      sa[673] = -0.07486733f;
	      sa[674] = -0.8338551f;
	      sa[675] = 0.33290046f;
	      sa[676] = 1.0499017f;
	      sa[677] = -0.34481844f;
	      sa[678] = 0.112242214f;
	      sa[679] = 0.12957963f;
	      sa[680] = 0.20239042f;
	      sa[681] = -0.34087083f;
	      sa[682] = -0.068994224f;
	      sa[683] = 0.10263983f;
	      sa[684] = -0.16458002f;
	      sa[685] = 0.13530861f;
	      sa[686] = 0.03142794f;
	      sa[687] = 0.17194532f;
	      sa[688] = -0.20098169f;
	      sa[689] = -0.106865756f;
	      sa[690] = 0.01343405f;
	      sa[691] = 0.31445536f;
	      sa[692] = 0.004820049f;
	      sa[693] = -0.17443928f;
	      sa[694] = -0.1518817f;
	      sa[695] = -0.0942355f;
	      sa[696] = -0.2588816f;
	      sa[697] = -0.014241341f;
	      sa[698] = -0.020015735f;
	      sa[699] = 1.847878E-4f;
	      sa[700] = -0.2998824f;
	      sa[701] = -0.5123278f;
	      sa[702] = 0.6928404f;
	      sa[703] = -0.25786182f;
	      sa[704] = 0.025921138f;
	      sa[705] = 0.091607325f;
	      sa[706] = -0.2918402f;
	      sa[707] = -0.13999091f;
	      sa[708] = -0.3788584f;
	      sa[709] = 0.1522909f;
	      sa[710] = 0.03446125f;
	      sa[711] = 0.22905743f;
	      sa[712] = -0.35966197f;
	      sa[713] = 0.09410682f;
	      sa[714] = -0.12888795f;
	      sa[715] = -0.22602628f;
	      sa[716] = 0.58566684f;
	      sa[717] = 0.7881274f;
	      sa[718] = -0.05242916f;
	      sa[719] = 0.09115727f;
	      sa[720] = 0.1882276f;
	      sa[721] = -0.29583636f;
	      sa[722] = 0.14865126f;
	      sa[723] = -0.09519776f;
	      sa[724] = 0.3711269f;
	      sa[725] = -0.25547442f;
	      sa[726] = 0.20280476f;
	      sa[727] = -0.2974208f;
	      sa[728] = -0.5136614f;
	      sa[729] = 0.07153581f;
	      sa[730] = -0.19959955f;
	      sa[731] = -0.14198652f;
	      sa[732] = -0.098088734f;
	      sa[733] = -0.08345172f;
	      sa[734] = 0.2221724f;
	      sa[735] = 0.20271996f;
	      sa[736] = -0.49598613f;
	      sa[737] = 0.24684428f;
	      sa[738] = 0.07660154f;
	      sa[739] = 0.119671196f;
	      sa[740] = 0.5266028f;
	      sa[741] = -0.049917556f;
	      sa[742] = 0.19342034f;
	      sa[743] = 0.071911834f;
	      sa[744] = -0.2227671f;
	      sa[745] = 0.09190632f;
	      sa[746] = -0.032413557f;
	      sa[747] = -0.06805063f;
	      sa[748] = 0.08624353f;
	      sa[749] = -0.16670826f;
	      sa[750] = 0.04974718f;
	      sa[751] = -0.0048678536f;
	      sa[752] = 0.35499245f;
	      sa[753] = 0.3113862f;
	      sa[754] = -0.2367326f;
	      sa[755] = 0.37203208f;
	      sa[756] = -0.001671025f;
	      sa[757] = 0.42698908f;
	      sa[758] = 0.10965928f;
	      sa[759] = -0.13010436f;
	      sa[760] = 0.26240095f;
	      sa[761] = -1.3600564f;
	      sa[762] = 0.4278682f;
	      sa[763] = -0.38714442f;
	      sa[764] = -0.2106729f;
	      sa[765] = -0.45048973f;
	      sa[766] = 0.29670134f;
	      sa[767] = 0.123882435f;
	      sa[768] = 0.9561423f;
	      sa[769] = -0.19605207f;
	      sa[770] = 0.1324035f;
	      sa[771] = -0.69942194f;
	      sa[772] = -0.19156517f;
	      sa[773] = 0.059271768f;
	      sa[774] = 0.07798076f;
	      sa[775] = 0.18258052f;
	      sa[776] = 0.09299682f;
	      sa[777] = 0.28354716f;
	      sa[778] = -0.30566904f;
	      sa[779] = 0.26320237f;
	      sa[780] = 0.23252977f;
	      sa[781] = 0.052628435f;
	      sa[782] = 0.4745407f;
	      sa[783] = 0.46939504f;
	      sa[784] = -0.82982135f;
	      sa[785] = 0.37727106f;
	      sa[786] = 1.1551011f;
	      sa[787] = -0.47998464f;
	      sa[788] = 0.48930803f;
	      sa[789] = 0.113379925f;
	      sa[790] = -0.20348324f;
	      sa[791] = -0.050831366f;
	      sa[792] = -0.6500491f;
	      sa[793] = 0.29944247f;
	      sa[794] = -0.013908344f;
	      sa[795] = -0.5191988f;
	      sa[796] = 0.037339382f;
	      sa[797] = 0.34799162f;
	      sa[798] = 0.1561966f;
	      sa[799] = 0.12301007f;
	      sa[800] = -0.4087368f;
	      sa[801] = 0.1477559f;
	      sa[802] = -1.1526382f;
	      sa[803] = -0.22754948f;
	      sa[804] = -0.016382672f;
	      sa[805] = 0.13038269f;
	      sa[806] = 0.47105238f;
	      sa[807] = 0.33836132f;
	      sa[808] = -0.038824055f;
	      sa[809] = -0.009444566f;
	      sa[810] = 0.049907167f;
	      sa[811] = -0.030773712f;
	      sa[812] = 0.15545182f;
	      sa[813] = 0.20125562f;
	      sa[814] = 0.24692884f;
	      sa[815] = 0.057398625f;
	      sa[816] = 0.2144118f;
	      sa[817] = -0.256606f;
	      sa[818] = -0.50807565f;
	      sa[819] = 0.19789533f;
	      sa[820] = 0.26964974f;
	      sa[821] = 0.07082643f;
	      sa[822] = 6.5889506E-4f;
	      sa[823] = -0.41772866f;
	      sa[824] = 0.031845894f;
	      sa[825] = 0.010609633f;
	      sa[826] = 0.007713084f;
	      sa[827] = -0.29521793f;
	      sa[828] = 0.051218618f;
	      sa[829] = -0.07462707f;
	      sa[830] = 0.03675881f;
	      sa[831] = -0.20015322f;
	      sa[832] = 0.1048775f;
	      sa[833] = 0.0721764f;
	      sa[834] = 0.0040844274f;
	      sa[835] = -0.16857359f;
	      sa[836] = 0.31634006f;
	      sa[837] = -0.0046835896f;
	      sa[838] = 0.08776618f;
	      sa[839] = -0.135882f;
	      sa[840] = -0.051160198f;
	      sa[841] = -0.11739769f;
	      sa[842] = 0.05915872f;
	      sa[843] = -0.04958259f;
	      sa[844] = -0.16620104f;
	      sa[845] = 0.73722005f;
	      sa[846] = 0.05147821f;
	      sa[847] = 0.368394f;
	      sa[848] = 0.04832384f;
	      sa[849] = -0.09930442f;
	      sa[850] = -0.19903144f;
	      sa[851] = -0.5638388f;
	      sa[852] = 0.24126555f;
	      sa[853] = 0.2223867f;
	      sa[854] = 0.13405114f;
	      sa[855] = -0.38150653f;
	      sa[856] = -0.9836086f;
	      sa[857] = 0.51887494f;
	      sa[858] = -0.49196205f;
	      sa[859] = -1.097132f;
	    }
	  }
	}
	// Neuron weights connecting Tanh and Tanh layer
	class DeepLearning_model_R_1481832873762_1608_Weight_8 implements java.io.Serializable {
	  public static final float[] VALUES = new float[430];
	  static {
	    DeepLearning_model_R_1481832873762_1608_Weight_8_0.fill(VALUES);
	  }
	  static final class DeepLearning_model_R_1481832873762_1608_Weight_8_0 implements java.io.Serializable {
	    static final void fill(float[] sa) {
	      sa[0] = 0.0024599785f;
	      sa[1] = 0.17559344f;
	      sa[2] = -0.10902465f;
	      sa[3] = 4.785526E-5f;
	      sa[4] = -0.0023577493f;
	      sa[5] = 0.09810285f;
	      sa[6] = 0.09805192f;
	      sa[7] = -0.0054421173f;
	      sa[8] = -0.29242718f;
	      sa[9] = -0.0015456264f;
	      sa[10] = -0.035798766f;
	      sa[11] = 0.080224544f;
	      sa[12] = 0.013181885f;
	      sa[13] = 0.17747758f;
	      sa[14] = -0.008474143f;
	      sa[15] = -0.35882026f;
	      sa[16] = 0.0026666615f;
	      sa[17] = -1.9662426E-5f;
	      sa[18] = 0.1644687f;
	      sa[19] = -1.14437775E-4f;
	      sa[20] = 0.1097688f;
	      sa[21] = 0.104085736f;
	      sa[22] = -0.005062858f;
	      sa[23] = -0.056942135f;
	      sa[24] = 0.0029762525f;
	      sa[25] = 0.14424282f;
	      sa[26] = -0.060543355f;
	      sa[27] = 0.059888903f;
	      sa[28] = 0.11102477f;
	      sa[29] = -0.36429518f;
	      sa[30] = 0.0021940588f;
	      sa[31] = -0.14509793f;
	      sa[32] = -0.1606564f;
	      sa[33] = 0.14024186f;
	      sa[34] = -0.0065628327f;
	      sa[35] = 0.031238735f;
	      sa[36] = -0.0084606735f;
	      sa[37] = -2.4929573E-4f;
	      sa[38] = -0.11777221f;
	      sa[39] = 0.0999844f;
	      sa[40] = -0.33723646f;
	      sa[41] = 0.0039606653f;
	      sa[42] = 0.1643894f;
	      sa[43] = -0.0049574594f;
	      sa[44] = 0.17420268f;
	      sa[45] = -0.07763104f;
	      sa[46] = 0.0041110897f;
	      sa[47] = -0.0015091846f;
	      sa[48] = 0.059502833f;
	      sa[49] = -0.22417794f;
	      sa[50] = 0.0076297754f;
	      sa[51] = -0.27494672f;
	      sa[52] = 0.077545024f;
	      sa[53] = -0.016444152f;
	      sa[54] = 0.053572122f;
	      sa[55] = -0.08697152f;
	      sa[56] = -0.018514456f;
	      sa[57] = -0.06693402f;
	      sa[58] = -0.16222702f;
	      sa[59] = -0.02540745f;
	      sa[60] = -0.003097045f;
	      sa[61] = -0.08498962f;
	      sa[62] = -0.0026881013f;
	      sa[63] = -0.2683129f;
	      sa[64] = -0.11857231f;
	      sa[65] = -0.006172609f;
	      sa[66] = 0.10848596f;
	      sa[67] = 0.009045972f;
	      sa[68] = -0.03794617f;
	      sa[69] = -0.16302922f;
	      sa[70] = -0.097375564f;
	      sa[71] = -0.027915888f;
	      sa[72] = -0.18141259f;
	      sa[73] = 0.003593592f;
	      sa[74] = 0.17401493f;
	      sa[75] = -0.07298074f;
	      sa[76] = -8.59968E-5f;
	      sa[77] = 0.002769247f;
	      sa[78] = -0.051472664f;
	      sa[79] = -0.0036172674f;
	      sa[80] = 0.019624654f;
	      sa[81] = -0.094189666f;
	      sa[82] = -0.34704572f;
	      sa[83] = 0.02286732f;
	      sa[84] = -0.0029599883f;
	      sa[85] = -0.040597364f;
	      sa[86] = -0.0015656833f;
	      sa[87] = -0.027027553f;
	      sa[88] = -0.34818733f;
	      sa[89] = 0.0023790477f;
	      sa[90] = -3.7814066E-4f;
	      sa[91] = -0.013816671f;
	      sa[92] = 0.012836252f;
	      sa[93] = 4.1803537E-4f;
	      sa[94] = -0.12669894f;
	      sa[95] = 0.08209005f;
	      sa[96] = -0.026910834f;
	      sa[97] = -0.179722f;
	      sa[98] = 0.14126135f;
	      sa[99] = 0.33452365f;
	      sa[100] = 0.18140818f;
	      sa[101] = 0.5526222f;
	      sa[102] = 0.30318132f;
	      sa[103] = -0.0041951896f;
	      sa[104] = -0.034793433f;
	      sa[105] = 0.0022623676f;
	      sa[106] = 0.18978015f;
	      sa[107] = 0.11967728f;
	      sa[108] = -0.028562441f;
	      sa[109] = -0.11097211f;
	      sa[110] = 0.002514454f;
	      sa[111] = -0.22423507f;
	      sa[112] = -0.011688989f;
	      sa[113] = -0.16862807f;
	      sa[114] = -0.010939166f;
	      sa[115] = -0.14108463f;
	      sa[116] = 4.037233E-4f;
	      sa[117] = -0.47338328f;
	      sa[118] = -0.08570113f;
	      sa[119] = 0.28677475f;
	      sa[120] = 0.0028039298f;
	      sa[121] = -0.083146274f;
	      sa[122] = 0.0025251799f;
	      sa[123] = -0.020645522f;
	      sa[124] = 0.1828142f;
	      sa[125] = -0.17799348f;
	      sa[126] = 0.06795568f;
	      sa[127] = 4.5738288E-4f;
	      sa[128] = 0.101207085f;
	      sa[129] = -0.0024629103f;
	      sa[130] = 0.15240094f;
	      sa[131] = -0.14337182f;
	      sa[132] = 1.2821206E-4f;
	      sa[133] = 6.307009E-4f;
	      sa[134] = 0.2894464f;
	      sa[135] = 0.06268874f;
	      sa[136] = 0.0018763995f;
	      sa[137] = 0.0709236f;
	      sa[138] = 0.038724516f;
	      sa[139] = 0.11396517f;
	      sa[140] = 0.030434387f;
	      sa[141] = 0.11055495f;
	      sa[142] = 0.034644946f;
	      sa[143] = -0.037705943f;
	      sa[144] = 0.16396113f;
	      sa[145] = -0.09662083f;
	      sa[146] = 0.001115604f;
	      sa[147] = 0.14558144f;
	      sa[148] = -0.0027356695f;
	      sa[149] = 0.09590429f;
	      sa[150] = -0.037659205f;
	      sa[151] = 0.022571668f;
	      sa[152] = -0.01724988f;
	      sa[153] = -0.008876518f;
	      sa[154] = -0.055836916f;
	      sa[155] = -0.05309138f;
	      sa[156] = 0.019948507f;
	      sa[157] = 0.18898779f;
	      sa[158] = 0.5199705f;
	      sa[159] = -0.0052327355f;
	      sa[160] = -0.03765263f;
	      sa[161] = 0.33222392f;
	      sa[162] = 0.0792052f;
	      sa[163] = 0.0049848203f;
	      sa[164] = 0.08584079f;
	      sa[165] = 0.0034788358f;
	      sa[166] = 0.026623508f;
	      sa[167] = -0.028038157f;
	      sa[168] = -0.14067362f;
	      sa[169] = -0.17652696f;
	      sa[170] = 0.0024520752f;
	      sa[171] = -0.5969258f;
	      sa[172] = -0.004084925f;
	      sa[173] = 0.058619495f;
	      sa[174] = -0.2950446f;
	      sa[175] = -0.0028291778f;
	      sa[176] = 9.766422E-4f;
	      sa[177] = -0.5328326f;
	      sa[178] = -0.1272023f;
	      sa[179] = -0.0033314733f;
	      sa[180] = 0.083639994f;
	      sa[181] = 0.05458348f;
	      sa[182] = 0.043128256f;
	      sa[183] = -0.09446309f;
	      sa[184] = 0.15528432f;
	      sa[185] = 0.1294089f;
	      sa[186] = -0.11835565f;
	      sa[187] = 0.05462084f;
	      sa[188] = 0.03056487f;
	      sa[189] = 0.0024593049f;
	      sa[190] = 0.1762818f;
	      sa[191] = 0.0073633054f;
	      sa[192] = -0.3602451f;
	      sa[193] = -0.16189514f;
	      sa[194] = 0.0043228017f;
	      sa[195] = -0.0930444f;
	      sa[196] = -0.007180654f;
	      sa[197] = 0.0063688047f;
	      sa[198] = -0.08462519f;
	      sa[199] = -0.018942412f;
	      sa[200] = -0.04267573f;
	      sa[201] = -0.2942583f;
	      sa[202] = 0.0024306385f;
	      sa[203] = 0.058557313f;
	      sa[204] = -0.50089014f;
	      sa[205] = 0.1915429f;
	      sa[206] = 0.0056452844f;
	      sa[207] = 0.12528849f;
	      sa[208] = 9.3313947E-4f;
	      sa[209] = -0.01843538f;
	      sa[210] = 0.043323066f;
	      sa[211] = -0.014109492f;
	      sa[212] = 0.08037676f;
	      sa[213] = -0.01908226f;
	      sa[214] = 0.120918036f;
	      sa[215] = -0.0065370295f;
	      sa[216] = 0.27702713f;
	      sa[217] = 0.18958262f;
	      sa[218] = 0.0065249875f;
	      sa[219] = 0.0027533579f;
	      sa[220] = -0.12161414f;
	      sa[221] = 0.15348455f;
	      sa[222] = 2.654941E-4f;
	      sa[223] = 0.2446478f;
	      sa[224] = -0.029991535f;
	      sa[225] = -0.09389138f;
	      sa[226] = 0.2220207f;
	      sa[227] = 0.060688417f;
	      sa[228] = -0.0056033977f;
	      sa[229] = 0.057980407f;
	      sa[230] = 0.1528428f;
	      sa[231] = -0.32659468f;
	      sa[232] = -0.0011534347f;
	      sa[233] = 0.15563607f;
	      sa[234] = 0.0049843458f;
	      sa[235] = -0.05033931f;
	      sa[236] = -0.0014185006f;
	      sa[237] = 0.056649372f;
	      sa[238] = -0.20275246f;
	      sa[239] = -0.0036202637f;
	      sa[240] = -0.009439756f;
	      sa[241] = 0.08108132f;
	      sa[242] = -0.088859715f;
	      sa[243] = -0.31689817f;
	      sa[244] = -0.23396997f;
	      sa[245] = -4.8517727E-4f;
	      sa[246] = -0.051441465f;
	      sa[247] = 0.0872509f;
	      sa[248] = 0.22044276f;
	      sa[249] = 0.0067826645f;
	      sa[250] = 0.009115611f;
	      sa[251] = 0.0037516605f;
	      sa[252] = 0.015070178f;
	      sa[253] = -0.17317958f;
	      sa[254] = -0.07152777f;
	      sa[255] = 0.025528738f;
	      sa[256] = -0.008209637f;
	      sa[257] = 0.29382956f;
	      sa[258] = 0.0078116683f;
	      sa[259] = 0.08722138f;
	      sa[260] = 0.014431293f;
	      sa[261] = -0.0047617517f;
	      sa[262] = 0.0024047084f;
	      sa[263] = -0.19412227f;
	      sa[264] = -0.07392002f;
	      sa[265] = -9.2640275E-4f;
	      sa[266] = -0.2800558f;
	      sa[267] = -0.07475928f;
	      sa[268] = 0.12513614f;
	      sa[269] = 0.16711949f;
	      sa[270] = -0.047864664f;
	      sa[271] = 0.09859922f;
	      sa[272] = -0.107027024f;
	      sa[273] = -0.041090682f;
	      sa[274] = -0.0079319235f;
	      sa[275] = 0.001158943f;
	      sa[276] = -0.17652501f;
	      sa[277] = -0.0018197022f;
	      sa[278] = 0.041379683f;
	      sa[279] = 0.034985043f;
	      sa[280] = 0.019099379f;
	      sa[281] = -0.028605508f;
	      sa[282] = -0.003688483f;
	      sa[283] = 0.18245685f;
	      sa[284] = 0.09683318f;
	      sa[285] = -0.0020559174f;
	      sa[286] = -0.3729161f;
	      sa[287] = -0.12496295f;
	      sa[288] = 5.45755E-4f;
	      sa[289] = -0.00672046f;
	      sa[290] = -0.53853756f;
	      sa[291] = 0.14835045f;
	      sa[292] = -0.008688962f;
	      sa[293] = 0.02713229f;
	      sa[294] = 0.018774115f;
	      sa[295] = 0.038346462f;
	      sa[296] = 0.11636036f;
	      sa[297] = 0.053145885f;
	      sa[298] = -0.026742106f;
	      sa[299] = 0.0120191565f;
	      sa[300] = 0.21784064f;
	      sa[301] = -0.0010170871f;
	      sa[302] = 0.04399545f;
	      sa[303] = 0.22916156f;
	      sa[304] = 0.0015141647f;
	      sa[305] = 0.0029634181f;
	      sa[306] = 0.60707384f;
	      sa[307] = -0.050940253f;
	      sa[308] = 0.004393923f;
	      sa[309] = 0.21202704f;
	      sa[310] = -0.09758736f;
	      sa[311] = 0.0263312f;
	      sa[312] = 0.16114785f;
	      sa[313] = 0.22691563f;
	      sa[314] = 0.08680529f;
	      sa[315] = 0.64950955f;
	      sa[316] = 2.547671E-4f;
	      sa[317] = 0.066595465f;
	      sa[318] = -0.0013519898f;
	      sa[319] = 0.23879093f;
	      sa[320] = 0.0023921481f;
	      sa[321] = -0.12757759f;
	      sa[322] = -0.22665429f;
	      sa[323] = 0.017016038f;
	      sa[324] = -0.023761379f;
	      sa[325] = 0.0042782817f;
	      sa[326] = -0.21134606f;
	      sa[327] = 0.011995804f;
	      sa[328] = -0.06773918f;
	      sa[329] = 0.24541382f;
	      sa[330] = 0.011317862f;
	      sa[331] = 0.0018711158f;
	      sa[332] = 0.073843084f;
	      sa[333] = 0.11542616f;
	      sa[334] = -0.24629574f;
	      sa[335] = 0.0012281426f;
	      sa[336] = -0.0016003909f;
	      sa[337] = 0.0032273785f;
	      sa[338] = 0.017323395f;
	      sa[339] = -0.042616468f;
	      sa[340] = -0.09801289f;
	      sa[341] = 0.24054973f;
	      sa[342] = 6.2887225E-4f;
	      sa[343] = 0.37183282f;
	      sa[344] = 0.0041019777f;
	      sa[345] = 0.083445825f;
	      sa[346] = -0.07968566f;
	      sa[347] = 0.0040047076f;
	      sa[348] = 0.0034273819f;
	      sa[349] = -0.11469354f;
	      sa[350] = -0.27440664f;
	      sa[351] = -2.9660243E-4f;
	      sa[352] = 0.4247794f;
	      sa[353] = 0.06951326f;
	      sa[354] = 0.039283913f;
	      sa[355] = 0.11748253f;
	      sa[356] = 9.6707954E-4f;
	      sa[357] = 0.10328764f;
	      sa[358] = 0.014178828f;
	      sa[359] = 0.008109163f;
	      sa[360] = 0.17223072f;
	      sa[361] = -0.0053107003f;
	      sa[362] = -0.15526214f;
	      sa[363] = 0.0019187169f;
	      sa[364] = -0.12981844f;
	      sa[365] = -0.0035496037f;
	      sa[366] = -0.024591278f;
	      sa[367] = 0.05925556f;
	      sa[368] = 0.0038075382f;
	      sa[369] = -0.199871f;
	      sa[370] = -0.032986883f;
	      sa[371] = 0.1087515f;
	      sa[372] = -0.08863851f;
	      sa[373] = -0.27610675f;
	      sa[374] = 0.0014116284f;
	      sa[375] = -0.0046329712f;
	      sa[376] = 0.06814773f;
	      sa[377] = 0.04981291f;
	      sa[378] = -0.008878369f;
	      sa[379] = -0.053491935f;
	      sa[380] = 0.013310568f;
	      sa[381] = -0.02803992f;
	      sa[382] = -0.15769555f;
	      sa[383] = 0.2887308f;
	      sa[384] = -0.31585926f;
	      sa[385] = 0.010971221f;
	      sa[386] = 0.20351951f;
	      sa[387] = 0.0023766393f;
	      sa[388] = -0.106266975f;
	      sa[389] = -0.17148651f;
	      sa[390] = -4.5069194E-4f;
	      sa[391] = 0.0051726815f;
	      sa[392] = 0.16618359f;
	      sa[393] = 0.08447738f;
	      sa[394] = -0.004135119f;
	      sa[395] = 0.083038114f;
	      sa[396] = -0.123825446f;
	      sa[397] = -0.0130760595f;
	      sa[398] = -0.017908048f;
	      sa[399] = 0.43089408f;
	      sa[400] = 0.14376754f;
	      sa[401] = -0.048017357f;
	      sa[402] = 0.01623902f;
	      sa[403] = -0.062153798f;
	      sa[404] = 0.0062395306f;
	      sa[405] = -0.26057175f;
	      sa[406] = 0.0026344731f;
	      sa[407] = -0.02639179f;
	      sa[408] = -0.12492176f;
	      sa[409] = 0.02607262f;
	      sa[410] = -0.08391252f;
	      sa[411] = 0.0036411732f;
	      sa[412] = -0.0145896375f;
	      sa[413] = 0.06547659f;
	      sa[414] = 0.054785073f;
	      sa[415] = 0.03116488f;
	      sa[416] = -0.21660675f;
	      sa[417] = 3.6117405E-4f;
	      sa[418] = -0.038564812f;
	      sa[419] = 0.2271922f;
	      sa[420] = -0.1373632f;
	      sa[421] = 0.0010206316f;
	      sa[422] = -0.003994476f;
	      sa[423] = -0.008165969f;
	      sa[424] = 0.018382505f;
	      sa[425] = 0.012728258f;
	      sa[426] = -0.18195528f;
	      sa[427] = 0.0026412667f;
	      sa[428] = 7.0656795E-4f;
	      sa[429] = -0.25228062f;
	    }
	  }
	}
	// The class representing training column names
	class NamesHolder_DeepLearning_model_R_1481832873762_1608 implements java.io.Serializable {
	  public static final String[] VALUES = new String[10];
	  static {
	    NamesHolder_DeepLearning_model_R_1481832873762_1608_0.fill(VALUES);
	  }
	  static final class NamesHolder_DeepLearning_model_R_1481832873762_1608_0 implements java.io.Serializable {
	    static final void fill(String[] sa) {
	      sa[0] = "ATG_CIS";
	      sa[1] = "ATG_TRANS";
	      sa[2] = "NVS_NR_hER";
	      sa[3] = "OT_ER_ERaERa_0480";
	      sa[4] = "OT_ER_ERaERa_1440";
	      sa[5] = "OT_ER_ERaERb_0480";
	      sa[6] = "OT_ER_ERaERb_1440";
	      sa[7] = "OT_ER_ERbERb_0480";
	      sa[8] = "OT_ER_ERbERb_1440";
	      sa[9] = "TOX21_ERa_BLA_Agonist";
	    }
	  }
	}